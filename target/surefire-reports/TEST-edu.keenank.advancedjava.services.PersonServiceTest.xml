<?xml version="1.0" encoding="UTF-8" ?>
<testsuite tests="16" failures="2" name="edu.keenank.advancedjava.services.PersonServiceTest" time="5.868" errors="14" skipped="0">
  <properties>
    <property name="java.runtime.name" value="Java(TM) SE Runtime Environment"/>
    <property name="sun.boot.library.path" value="C:\Program Files\Java\jdk1.8.0_181\jre\bin"/>
    <property name="java.vm.version" value="25.181-b13"/>
    <property name="java.vm.vendor" value="Oracle Corporation"/>
    <property name="maven.multiModuleProjectDirectory" value="C:\Users\kevin\Documents\GitHub\java_class4"/>
    <property name="java.vendor.url" value="http://java.oracle.com/"/>
    <property name="path.separator" value=";"/>
    <property name="guice.disable.misplaced.annotation.check" value="true"/>
    <property name="java.vm.name" value="Java HotSpot(TM) 64-Bit Server VM"/>
    <property name="file.encoding.pkg" value="sun.io"/>
    <property name="user.script" value=""/>
    <property name="user.country" value="US"/>
    <property name="sun.java.launcher" value="SUN_STANDARD"/>
    <property name="sun.os.patch.level" value=""/>
    <property name="java.vm.specification.name" value="Java Virtual Machine Specification"/>
    <property name="user.dir" value="C:\Users\kevin\Documents\GitHub\java_class4"/>
    <property name="java.runtime.version" value="1.8.0_181-b13"/>
    <property name="java.awt.graphicsenv" value="sun.awt.Win32GraphicsEnvironment"/>
    <property name="java.endorsed.dirs" value="C:\Program Files\Java\jdk1.8.0_181\jre\lib\endorsed"/>
    <property name="os.arch" value="amd64"/>
    <property name="java.io.tmpdir" value="C:\Users\kevin\AppData\Local\Temp\"/>
    <property name="line.separator" value="
"/>
    <property name="java.vm.specification.vendor" value="Oracle Corporation"/>
    <property name="user.variant" value=""/>
    <property name="os.name" value="Windows 10"/>
    <property name="classworlds.conf" value="C:\Program Files\Apache\maven\bin\..\bin\m2.conf"/>
    <property name="sun.jnu.encoding" value="Cp1252"/>
    <property name="java.library.path" value="C:\Program Files\Java\jdk1.8.0_181\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Git\cmd;C:\Program Files\Java\jdk1.8.0_181\bin;C:\Program Files\Apache\maven\bin;C:\Program Files\PuTTY\;C:\Program Files\Apache\maven\bin;C:\Program Files\MySQL\MySQL Server 8.0\bin;C:\Program Files\Apache\maven;C:\Users\kevin\AppData\Local\Microsoft\WindowsApps;C:\Users\kevin\AppData\Local\GitHubDesktop\bin;."/>
    <property name="maven.conf" value="C:\Program Files\Apache\maven\bin\../conf"/>
    <property name="java.specification.name" value="Java Platform API Specification"/>
    <property name="java.class.version" value="52.0"/>
    <property name="sun.management.compiler" value="HotSpot 64-Bit Tiered Compilers"/>
    <property name="os.version" value="10.0"/>
    <property name="library.jansi.path" value="C:\Program Files\Apache\maven\bin\..\lib\jansi-native"/>
    <property name="user.home" value="C:\Users\kevin"/>
    <property name="user.timezone" value="America/New_York"/>
    <property name="java.awt.printerjob" value="sun.awt.windows.WPrinterJob"/>
    <property name="java.specification.version" value="1.8"/>
    <property name="file.encoding" value="Cp1252"/>
    <property name="user.name" value="kevin"/>
    <property name="java.class.path" value="C:\Program Files\Apache\maven\bin\..\boot\plexus-classworlds-2.5.2.jar"/>
    <property name="java.vm.specification.version" value="1.8"/>
    <property name="sun.arch.data.model" value="64"/>
    <property name="java.home" value="C:\Program Files\Java\jdk1.8.0_181\jre"/>
    <property name="sun.java.command" value="org.codehaus.plexus.classworlds.launcher.Launcher test"/>
    <property name="java.specification.vendor" value="Oracle Corporation"/>
    <property name="user.language" value="en"/>
    <property name="awt.toolkit" value="sun.awt.windows.WToolkit"/>
    <property name="java.vm.info" value="mixed mode"/>
    <property name="java.version" value="1.8.0_181"/>
    <property name="java.ext.dirs" value="C:\Program Files\Java\jdk1.8.0_181\jre\lib\ext;C:\WINDOWS\Sun\Java\lib\ext"/>
    <property name="sun.boot.class.path" value="C:\Program Files\Java\jdk1.8.0_181\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_181\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_181\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_181\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_181\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_181\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_181\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_181\jre\classes"/>
    <property name="sun.stderr.encoding" value="cp437"/>
    <property name="java.vendor" value="Oracle Corporation"/>
    <property name="maven.home" value="C:\Program Files\Apache\maven\bin\.."/>
    <property name="file.separator" value="\"/>
    <property name="java.vendor.url.bug" value="http://bugreport.sun.com/bugreport/"/>
    <property name="sun.cpu.endian" value="little"/>
    <property name="sun.io.unicode.encoding" value="UnicodeLittle"/>
    <property name="sun.stdout.encoding" value="cp437"/>
    <property name="sun.desktop" value="windows"/>
    <property name="sun.cpu.isalist" value="amd64"/>
  </properties>
  <testcase classname="edu.keenank.advancedjava.services.PersonServiceTest" name="testGetPersonsPositive[0]" time="0.858">
    <error message="Index: 0" type="java.lang.IndexOutOfBoundsException">java.lang.IndexOutOfBoundsException: Index: 0
	at java.util.Collections$EmptyList.get(Collections.java:4454)
	at edu.keenank.advancedjava.services.PersonServiceTest.testGetPersonsPositive(PersonServiceTest.java:59)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:28)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:300)
	at org.junit.runners.Suite.runChild(Suite.java:128)
	at org.junit.runners.Suite.runChild(Suite.java:24)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:300)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:252)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:141)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:112)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
</error>
    <system-out>/* creates a new stocks database */ DROP DATABASE IF EXISTS stocks 
CREATE DATABASE stocks 
USE stocks 
DROP TABLE IF EXISTS quotes CASCADE 
DROP TABLE IF EXISTS person_stocks CASCADE 
DROP TABLE IF EXISTS person CASCADE 
DROP TABLE IF EXISTS stock_symbols CASCADE 
CREATE TABLE stock_symbols(    id INT NOT NULL AUTO_INCREMENT,    symbol VARCHAR(4) NOT NULL,    PRIMARY KEY (id) ) 
CREATE TABLE quotes(    id INT NOT NULL AUTO_INCREMENT,    symbol_id INT NOT NULL,    time TIMESTAMP NOT NULL,    price DECIMAL(10,2) NOT NULL,    PRIMARY KEY (id),    FOREIGN KEY (symbol_id) REFERENCES stock_symbols (id) ) 
CREATE TABLE person(    id INT NOT NULL AUTO_INCREMENT,    first_name VARCHAR(256) NOT NULL,    last_name VARCHAR(256) NOT NULL,    PRIMARY KEY (id) ) 
CREATE TABLE person_stocks(    id INT NOT NULL AUTO_INCREMENT,    person_id INT NOT NULL,    symbol_id INT NOT NULL,    PRIMARY KEY (id),    FOREIGN KEY (person_id) REFERENCES person (id),    FOREIGN KEY (symbol_id) REFERENCES stock_symbols (id) ) 
INSERT INTO stock_symbols (symbol) VALUES (&apos;GOOG&apos;) 
SET @stock_symbols_last_value = LAST_INSERT_ID() 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2018-01-01 17:00:01&apos;,&apos;728.58&apos;) 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2018-01-02 17:00:01&apos;,&apos;719.41&apos;) 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2018-01-03 17:00:01&apos;,&apos;718.36&apos;) 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2018-01-04 17:00:01&apos;,&apos;718.27&apos;) 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2018-01-05 17:00:01&apos;,&apos;718.92&apos;) 
INSERT INTO person (first_name,last_name) VALUES (&apos;Kevin&apos;,&apos;Keenan&apos;) 
SET @person_last_value = LAST_INSERT_ID() 
INSERT INTO person_stocks (person_id,symbol_id) VALUES (@person_last_value,@stock_symbols_last_value) 
INSERT INTO stock_symbols (symbol) VALUES (&apos;AAPL&apos;) 
SET @stock_symbols_last_value = LAST_INSERT_ID() 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2018-01-01 17:00:01&apos;,&apos;99.65&apos;) 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2018-01-02 17:00:01&apos;,&apos;98.83&apos;) 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2018-01-03 17:00:01&apos;,&apos;97.34&apos;) 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2018-01-04 17:00:01&apos;,&apos;97.46&apos;) 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2018-01-05 17:00:01&apos;,&apos;97.14&apos;) 
INSERT INTO person_stocks (person_id,symbol_id) VALUES (@person_last_value,@stock_symbols_last_value) 
INSERT INTO person (first_name,last_name) VALUES (&apos;Marks&apos;,&apos;Spencer&apos;) 
SET @person_last_value = LAST_INSERT_ID() 
INSERT INTO person_stocks (person_id,symbol_id) VALUES (@person_last_value,@stock_symbols_last_value) 
INSERT INTO stock_symbols (symbol) VALUES (&apos;AMZN&apos;) 
SET @stock_symbols_last_value = LAST_INSERT_ID() 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2016-06-09 17:00:01&apos;,&apos;727.65&apos;) 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2016-06-10 17:00:01&apos;,&apos;717.91&apos;) 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2016-06-13 17:00:01&apos;,&apos;715.24&apos;) 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2016-06-14 17:00:01&apos;,&apos;719.30&apos;) 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2016-06-15 17:00:01&apos;,&apos;714.26&apos;) 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2016-06-16 17:00:01&apos;,&apos;717.51&apos;) 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2016-06-17 17:00:01&apos;,&apos;706.39&apos;) 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2016-06-20 17:00:01&apos;,&apos;714.01&apos;) 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2016-06-21 17:00:01&apos;,&apos;715.82&apos;) 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2016-06-22 17:00:01&apos;,&apos;710.60&apos;) 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2016-06-23 17:00:01&apos;,&apos;722.08&apos;) 
INSERT INTO person_stocks (person_id,symbol_id) VALUES (@person_last_value,@stock_symbols_last_value) 
l,time,price) VALUES (&apos;AMZN&apos;,&apos;2015-02-03 00:00:01&apos;,&apos;363.21&apos;) 
</system-out>
    <system-err>Sun Oct 28 14:46:20 EDT 2018 WARN: Establishing SSL connection without server&apos;s identity verification is not recommended. According to MySQL 5.5.45+, 5.6.26+ and 5.7.6+ requirements SSL connection must be established by default if explicit option isn&apos;t set. For compliance with existing applications not using SSL the verifyServerCertificate property is set to &apos;false&apos;. You need either to explicitly disable SSL by setting useSSL=false, or set useSSL=true and provide truststore for server certificate verification.
Error executing: l,time,price) VALUES (&apos;AMZN&apos;,&apos;2015-02-03 00:00:01&apos;,&apos;363.21&apos;) 
java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near &apos;l,time,price) VALUES (&apos;AMZN&apos;,&apos;2015-02-03 00:00:01&apos;,&apos;363.21&apos;)&apos; at line 1
Oct 28, 2018 2:46:20 PM org.hibernate.annotations.common.Version &lt;clinit&gt;
INFO: HCANN000001: Hibernate Commons Annotations {4.0.2.Final}
Oct 28, 2018 2:46:20 PM org.hibernate.Version logVersion
INFO: HHH000412: Hibernate Core {4.2.6.Final}
Oct 28, 2018 2:46:20 PM org.hibernate.cfg.Environment &lt;clinit&gt;
INFO: HHH000206: hibernate.properties not found
Oct 28, 2018 2:46:20 PM org.hibernate.cfg.Environment buildBytecodeProvider
INFO: HHH000021: Bytecode provider name : javassist
Oct 28, 2018 2:46:20 PM org.hibernate.cfg.Configuration configure
INFO: HHH000043: Configuring from resource: hibernate.cfg.xml
Oct 28, 2018 2:46:20 PM org.hibernate.cfg.Configuration getConfigurationInputStream
INFO: HHH000040: Configuration resource: hibernate.cfg.xml
Oct 28, 2018 2:46:20 PM org.hibernate.cfg.Configuration doConfigure
INFO: HHH000041: Configured SessionFactory: null
Oct 28, 2018 2:46:20 PM org.hibernate.service.jdbc.connections.internal.DriverManagerConnectionProviderImpl configure
INFO: HHH000402: Using Hibernate built-in connection pool (not for production use!)
Oct 28, 2018 2:46:20 PM org.hibernate.service.jdbc.connections.internal.DriverManagerConnectionProviderImpl configure
INFO: HHH000115: Hibernate connection pool size: 20
Oct 28, 2018 2:46:20 PM org.hibernate.service.jdbc.connections.internal.DriverManagerConnectionProviderImpl configure
INFO: HHH000006: Autocommit mode: false
Oct 28, 2018 2:46:20 PM org.hibernate.service.jdbc.connections.internal.DriverManagerConnectionProviderImpl configure
INFO: HHH000401: using driver [com.mysql.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/stocks]
Oct 28, 2018 2:46:20 PM org.hibernate.service.jdbc.connections.internal.DriverManagerConnectionProviderImpl configure
INFO: HHH000046: Connection properties: {user=monty, password=****}
Sun Oct 28 14:46:20 EDT 2018 WARN: Establishing SSL connection without server&apos;s identity verification is not recommended. According to MySQL 5.5.45+, 5.6.26+ and 5.7.6+ requirements SSL connection must be established by default if explicit option isn&apos;t set. For compliance with existing applications not using SSL the verifyServerCertificate property is set to &apos;false&apos;. You need either to explicitly disable SSL by setting useSSL=false, or set useSSL=true and provide truststore for server certificate verification.
Oct 28, 2018 2:46:20 PM org.hibernate.dialect.Dialect &lt;init&gt;
INFO: HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
Oct 28, 2018 2:46:21 PM org.hibernate.engine.transaction.internal.TransactionFactoryInitiator initiateService
INFO: HHH000399: Using default transaction strategy (direct JDBC transactions)
Oct 28, 2018 2:46:21 PM org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory &lt;init&gt;
INFO: HHH000397: Using ASTQueryTranslatorFactory
</system-err>
  </testcase>
  <testcase classname="edu.keenank.advancedjava.services.PersonServiceTest" name="testGetStockSymbolsNegative[0]" time="0.331">
    <error message="Could not add/update Person data. Unknown entity: edu.keenank.advancedjava.model.DatabasePerson" type="edu.keenank.advancedjava.services.PersonServiceException">edu.keenank.advancedjava.services.PersonServiceException: Could not add/update Person data. Unknown entity: edu.keenank.advancedjava.model.DatabasePerson
	at edu.keenank.advancedjava.services.DatabasePersonService.addOrUpdatePerson(DatabasePersonService.java:69)
	at edu.keenank.advancedjava.services.PersonServiceTest.testGetStockSymbolsNegative(PersonServiceTest.java:114)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:28)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:300)
	at org.junit.runners.Suite.runChild(Suite.java:128)
	at org.junit.runners.Suite.runChild(Suite.java:24)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:300)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:252)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:141)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:112)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
Caused by: org.hibernate.MappingException: Unknown entity: edu.keenank.advancedjava.model.DatabasePerson
	at org.hibernate.internal.SessionFactoryImpl.getEntityPersister(SessionFactoryImpl.java:1143)
	at org.hibernate.internal.SessionImpl.getEntityPersister(SessionImpl.java:1433)
	at org.hibernate.engine.internal.ForeignKeys.isTransient(ForeignKeys.java:208)
	at org.hibernate.event.internal.AbstractSaveEventListener.getEntityState(AbstractSaveEventListener.java:497)
	at org.hibernate.event.internal.DefaultSaveOrUpdateEventListener.performSaveOrUpdate(DefaultSaveOrUpdateEventListener.java:100)
	at org.hibernate.event.internal.DefaultSaveOrUpdateEventListener.onSaveOrUpdate(DefaultSaveOrUpdateEventListener.java:90)
	at org.hibernate.internal.SessionImpl.fireSaveOrUpdate(SessionImpl.java:735)
	at org.hibernate.internal.SessionImpl.saveOrUpdate(SessionImpl.java:727)
	at org.hibernate.internal.SessionImpl.saveOrUpdate(SessionImpl.java:723)
	at edu.keenank.advancedjava.services.DatabasePersonService.addOrUpdatePerson(DatabasePersonService.java:63)
	... 39 more
</error>
    <system-out>/* creates a new stocks database */ DROP DATABASE IF EXISTS stocks 
CREATE DATABASE stocks 
USE stocks 
DROP TABLE IF EXISTS quotes CASCADE 
DROP TABLE IF EXISTS person_stocks CASCADE 
DROP TABLE IF EXISTS person CASCADE 
DROP TABLE IF EXISTS stock_symbols CASCADE 
CREATE TABLE stock_symbols(    id INT NOT NULL AUTO_INCREMENT,    symbol VARCHAR(4) NOT NULL,    PRIMARY KEY (id) ) 
CREATE TABLE quotes(    id INT NOT NULL AUTO_INCREMENT,    symbol_id INT NOT NULL,    time TIMESTAMP NOT NULL,    price DECIMAL(10,2) NOT NULL,    PRIMARY KEY (id),    FOREIGN KEY (symbol_id) REFERENCES stock_symbols (id) ) 
CREATE TABLE person(    id INT NOT NULL AUTO_INCREMENT,    first_name VARCHAR(256) NOT NULL,    last_name VARCHAR(256) NOT NULL,    PRIMARY KEY (id) ) 
CREATE TABLE person_stocks(    id INT NOT NULL AUTO_INCREMENT,    person_id INT NOT NULL,    symbol_id INT NOT NULL,    PRIMARY KEY (id),    FOREIGN KEY (person_id) REFERENCES person (id),    FOREIGN KEY (symbol_id) REFERENCES stock_symbols (id) ) 
INSERT INTO stock_symbols (symbol) VALUES (&apos;GOOG&apos;) 
SET @stock_symbols_last_value = LAST_INSERT_ID() 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2018-01-01 17:00:01&apos;,&apos;728.58&apos;) 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2018-01-02 17:00:01&apos;,&apos;719.41&apos;) 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2018-01-03 17:00:01&apos;,&apos;718.36&apos;) 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2018-01-04 17:00:01&apos;,&apos;718.27&apos;) 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2018-01-05 17:00:01&apos;,&apos;718.92&apos;) 
INSERT INTO person (first_name,last_name) VALUES (&apos;Kevin&apos;,&apos;Keenan&apos;) 
SET @person_last_value = LAST_INSERT_ID() 
INSERT INTO person_stocks (person_id,symbol_id) VALUES (@person_last_value,@stock_symbols_last_value) 
INSERT INTO stock_symbols (symbol) VALUES (&apos;AAPL&apos;) 
SET @stock_symbols_last_value = LAST_INSERT_ID() 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2018-01-01 17:00:01&apos;,&apos;99.65&apos;) 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2018-01-02 17:00:01&apos;,&apos;98.83&apos;) 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2018-01-03 17:00:01&apos;,&apos;97.34&apos;) 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2018-01-04 17:00:01&apos;,&apos;97.46&apos;) 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2018-01-05 17:00:01&apos;,&apos;97.14&apos;) 
INSERT INTO person_stocks (person_id,symbol_id) VALUES (@person_last_value,@stock_symbols_last_value) 
INSERT INTO person (first_name,last_name) VALUES (&apos;Marks&apos;,&apos;Spencer&apos;) 
SET @person_last_value = LAST_INSERT_ID() 
INSERT INTO person_stocks (person_id,symbol_id) VALUES (@person_last_value,@stock_symbols_last_value) 
INSERT INTO stock_symbols (symbol) VALUES (&apos;AMZN&apos;) 
SET @stock_symbols_last_value = LAST_INSERT_ID() 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2016-06-09 17:00:01&apos;,&apos;727.65&apos;) 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2016-06-10 17:00:01&apos;,&apos;717.91&apos;) 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2016-06-13 17:00:01&apos;,&apos;715.24&apos;) 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2016-06-14 17:00:01&apos;,&apos;719.30&apos;) 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2016-06-15 17:00:01&apos;,&apos;714.26&apos;) 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2016-06-16 17:00:01&apos;,&apos;717.51&apos;) 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2016-06-17 17:00:01&apos;,&apos;706.39&apos;) 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2016-06-20 17:00:01&apos;,&apos;714.01&apos;) 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2016-06-21 17:00:01&apos;,&apos;715.82&apos;) 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2016-06-22 17:00:01&apos;,&apos;710.60&apos;) 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2016-06-23 17:00:01&apos;,&apos;722.08&apos;) 
INSERT INTO person_stocks (person_id,symbol_id) VALUES (@person_last_value,@stock_symbols_last_value) 
l,time,price) VALUES (&apos;AMZN&apos;,&apos;2015-02-03 00:00:01&apos;,&apos;363.21&apos;) 
</system-out>
    <system-err>Sun Oct 28 14:46:21 EDT 2018 WARN: Establishing SSL connection without server&apos;s identity verification is not recommended. According to MySQL 5.5.45+, 5.6.26+ and 5.7.6+ requirements SSL connection must be established by default if explicit option isn&apos;t set. For compliance with existing applications not using SSL the verifyServerCertificate property is set to &apos;false&apos;. You need either to explicitly disable SSL by setting useSSL=false, or set useSSL=true and provide truststore for server certificate verification.
Error executing: l,time,price) VALUES (&apos;AMZN&apos;,&apos;2015-02-03 00:00:01&apos;,&apos;363.21&apos;) 
java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near &apos;l,time,price) VALUES (&apos;AMZN&apos;,&apos;2015-02-03 00:00:01&apos;,&apos;363.21&apos;)&apos; at line 1
Sun Oct 28 14:46:21 EDT 2018 WARN: Establishing SSL connection without server&apos;s identity verification is not recommended. According to MySQL 5.5.45+, 5.6.26+ and 5.7.6+ requirements SSL connection must be established by default if explicit option isn&apos;t set. For compliance with existing applications not using SSL the verifyServerCertificate property is set to &apos;false&apos;. You need either to explicitly disable SSL by setting useSSL=false, or set useSSL=true and provide truststore for server certificate verification.
</system-err>
  </testcase>
  <testcase classname="edu.keenank.advancedjava.services.PersonServiceTest" name="testGetPersonsNegative[0]" time="0.327">
    <failure message="Return value of getPersons() is an empty list" type="java.lang.AssertionError">java.lang.AssertionError: Return value of getPersons() is an empty list
	at org.junit.Assert.fail(Assert.java:93)
	at org.junit.Assert.assertTrue(Assert.java:43)
	at org.junit.Assert.assertFalse(Assert.java:68)
	at edu.keenank.advancedjava.services.PersonServiceTest.testGetPersonsNegative(PersonServiceTest.java:68)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:28)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:300)
	at org.junit.runners.Suite.runChild(Suite.java:128)
	at org.junit.runners.Suite.runChild(Suite.java:24)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:300)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:252)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:141)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:112)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
</failure>
    <system-out>/* creates a new stocks database */ DROP DATABASE IF EXISTS stocks 
CREATE DATABASE stocks 
USE stocks 
DROP TABLE IF EXISTS quotes CASCADE 
DROP TABLE IF EXISTS person_stocks CASCADE 
DROP TABLE IF EXISTS person CASCADE 
DROP TABLE IF EXISTS stock_symbols CASCADE 
CREATE TABLE stock_symbols(    id INT NOT NULL AUTO_INCREMENT,    symbol VARCHAR(4) NOT NULL,    PRIMARY KEY (id) ) 
CREATE TABLE quotes(    id INT NOT NULL AUTO_INCREMENT,    symbol_id INT NOT NULL,    time TIMESTAMP NOT NULL,    price DECIMAL(10,2) NOT NULL,    PRIMARY KEY (id),    FOREIGN KEY (symbol_id) REFERENCES stock_symbols (id) ) 
CREATE TABLE person(    id INT NOT NULL AUTO_INCREMENT,    first_name VARCHAR(256) NOT NULL,    last_name VARCHAR(256) NOT NULL,    PRIMARY KEY (id) ) 
CREATE TABLE person_stocks(    id INT NOT NULL AUTO_INCREMENT,    person_id INT NOT NULL,    symbol_id INT NOT NULL,    PRIMARY KEY (id),    FOREIGN KEY (person_id) REFERENCES person (id),    FOREIGN KEY (symbol_id) REFERENCES stock_symbols (id) ) 
INSERT INTO stock_symbols (symbol) VALUES (&apos;GOOG&apos;) 
SET @stock_symbols_last_value = LAST_INSERT_ID() 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2018-01-01 17:00:01&apos;,&apos;728.58&apos;) 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2018-01-02 17:00:01&apos;,&apos;719.41&apos;) 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2018-01-03 17:00:01&apos;,&apos;718.36&apos;) 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2018-01-04 17:00:01&apos;,&apos;718.27&apos;) 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2018-01-05 17:00:01&apos;,&apos;718.92&apos;) 
INSERT INTO person (first_name,last_name) VALUES (&apos;Kevin&apos;,&apos;Keenan&apos;) 
SET @person_last_value = LAST_INSERT_ID() 
INSERT INTO person_stocks (person_id,symbol_id) VALUES (@person_last_value,@stock_symbols_last_value) 
INSERT INTO stock_symbols (symbol) VALUES (&apos;AAPL&apos;) 
SET @stock_symbols_last_value = LAST_INSERT_ID() 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2018-01-01 17:00:01&apos;,&apos;99.65&apos;) 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2018-01-02 17:00:01&apos;,&apos;98.83&apos;) 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2018-01-03 17:00:01&apos;,&apos;97.34&apos;) 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2018-01-04 17:00:01&apos;,&apos;97.46&apos;) 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2018-01-05 17:00:01&apos;,&apos;97.14&apos;) 
INSERT INTO person_stocks (person_id,symbol_id) VALUES (@person_last_value,@stock_symbols_last_value) 
INSERT INTO person (first_name,last_name) VALUES (&apos;Marks&apos;,&apos;Spencer&apos;) 
SET @person_last_value = LAST_INSERT_ID() 
INSERT INTO person_stocks (person_id,symbol_id) VALUES (@person_last_value,@stock_symbols_last_value) 
INSERT INTO stock_symbols (symbol) VALUES (&apos;AMZN&apos;) 
SET @stock_symbols_last_value = LAST_INSERT_ID() 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2016-06-09 17:00:01&apos;,&apos;727.65&apos;) 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2016-06-10 17:00:01&apos;,&apos;717.91&apos;) 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2016-06-13 17:00:01&apos;,&apos;715.24&apos;) 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2016-06-14 17:00:01&apos;,&apos;719.30&apos;) 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2016-06-15 17:00:01&apos;,&apos;714.26&apos;) 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2016-06-16 17:00:01&apos;,&apos;717.51&apos;) 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2016-06-17 17:00:01&apos;,&apos;706.39&apos;) 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2016-06-20 17:00:01&apos;,&apos;714.01&apos;) 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2016-06-21 17:00:01&apos;,&apos;715.82&apos;) 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2016-06-22 17:00:01&apos;,&apos;710.60&apos;) 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2016-06-23 17:00:01&apos;,&apos;722.08&apos;) 
INSERT INTO person_stocks (person_id,symbol_id) VALUES (@person_last_value,@stock_symbols_last_value) 
l,time,price) VALUES (&apos;AMZN&apos;,&apos;2015-02-03 00:00:01&apos;,&apos;363.21&apos;) 
</system-out>
    <system-err>Sun Oct 28 14:46:21 EDT 2018 WARN: Establishing SSL connection without server&apos;s identity verification is not recommended. According to MySQL 5.5.45+, 5.6.26+ and 5.7.6+ requirements SSL connection must be established by default if explicit option isn&apos;t set. For compliance with existing applications not using SSL the verifyServerCertificate property is set to &apos;false&apos;. You need either to explicitly disable SSL by setting useSSL=false, or set useSSL=true and provide truststore for server certificate verification.
Error executing: l,time,price) VALUES (&apos;AMZN&apos;,&apos;2015-02-03 00:00:01&apos;,&apos;363.21&apos;) 
java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near &apos;l,time,price) VALUES (&apos;AMZN&apos;,&apos;2015-02-03 00:00:01&apos;,&apos;363.21&apos;)&apos; at line 1
Sun Oct 28 14:46:21 EDT 2018 WARN: Establishing SSL connection without server&apos;s identity verification is not recommended. According to MySQL 5.5.45+, 5.6.26+ and 5.7.6+ requirements SSL connection must be established by default if explicit option isn&apos;t set. For compliance with existing applications not using SSL the verifyServerCertificate property is set to &apos;false&apos;. You need either to explicitly disable SSL by setting useSSL=false, or set useSSL=true and provide truststore for server certificate verification.
</system-err>
  </testcase>
  <testcase classname="edu.keenank.advancedjava.services.PersonServiceTest" name="testAddStockToPersonPositive[0]" time="0.371">
    <error message="Could not add/update Person data. Unknown entity: edu.keenank.advancedjava.model.DatabasePerson" type="edu.keenank.advancedjava.services.PersonServiceException">edu.keenank.advancedjava.services.PersonServiceException: Could not add/update Person data. Unknown entity: edu.keenank.advancedjava.model.DatabasePerson
	at edu.keenank.advancedjava.services.DatabasePersonService.addOrUpdatePerson(DatabasePersonService.java:69)
	at edu.keenank.advancedjava.services.PersonServiceTest.testAddStockToPersonPositive(PersonServiceTest.java:127)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:28)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:300)
	at org.junit.runners.Suite.runChild(Suite.java:128)
	at org.junit.runners.Suite.runChild(Suite.java:24)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:300)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:252)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:141)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:112)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
Caused by: org.hibernate.MappingException: Unknown entity: edu.keenank.advancedjava.model.DatabasePerson
	at org.hibernate.internal.SessionFactoryImpl.getEntityPersister(SessionFactoryImpl.java:1143)
	at org.hibernate.internal.SessionImpl.getEntityPersister(SessionImpl.java:1433)
	at org.hibernate.engine.internal.ForeignKeys.isTransient(ForeignKeys.java:208)
	at org.hibernate.event.internal.AbstractSaveEventListener.getEntityState(AbstractSaveEventListener.java:497)
	at org.hibernate.event.internal.DefaultSaveOrUpdateEventListener.performSaveOrUpdate(DefaultSaveOrUpdateEventListener.java:100)
	at org.hibernate.event.internal.DefaultSaveOrUpdateEventListener.onSaveOrUpdate(DefaultSaveOrUpdateEventListener.java:90)
	at org.hibernate.internal.SessionImpl.fireSaveOrUpdate(SessionImpl.java:735)
	at org.hibernate.internal.SessionImpl.saveOrUpdate(SessionImpl.java:727)
	at org.hibernate.internal.SessionImpl.saveOrUpdate(SessionImpl.java:723)
	at edu.keenank.advancedjava.services.DatabasePersonService.addOrUpdatePerson(DatabasePersonService.java:63)
	... 39 more
</error>
    <system-out>/* creates a new stocks database */ DROP DATABASE IF EXISTS stocks 
CREATE DATABASE stocks 
USE stocks 
DROP TABLE IF EXISTS quotes CASCADE 
DROP TABLE IF EXISTS person_stocks CASCADE 
DROP TABLE IF EXISTS person CASCADE 
DROP TABLE IF EXISTS stock_symbols CASCADE 
CREATE TABLE stock_symbols(    id INT NOT NULL AUTO_INCREMENT,    symbol VARCHAR(4) NOT NULL,    PRIMARY KEY (id) ) 
CREATE TABLE quotes(    id INT NOT NULL AUTO_INCREMENT,    symbol_id INT NOT NULL,    time TIMESTAMP NOT NULL,    price DECIMAL(10,2) NOT NULL,    PRIMARY KEY (id),    FOREIGN KEY (symbol_id) REFERENCES stock_symbols (id) ) 
CREATE TABLE person(    id INT NOT NULL AUTO_INCREMENT,    first_name VARCHAR(256) NOT NULL,    last_name VARCHAR(256) NOT NULL,    PRIMARY KEY (id) ) 
CREATE TABLE person_stocks(    id INT NOT NULL AUTO_INCREMENT,    person_id INT NOT NULL,    symbol_id INT NOT NULL,    PRIMARY KEY (id),    FOREIGN KEY (person_id) REFERENCES person (id),    FOREIGN KEY (symbol_id) REFERENCES stock_symbols (id) ) 
INSERT INTO stock_symbols (symbol) VALUES (&apos;GOOG&apos;) 
SET @stock_symbols_last_value = LAST_INSERT_ID() 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2018-01-01 17:00:01&apos;,&apos;728.58&apos;) 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2018-01-02 17:00:01&apos;,&apos;719.41&apos;) 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2018-01-03 17:00:01&apos;,&apos;718.36&apos;) 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2018-01-04 17:00:01&apos;,&apos;718.27&apos;) 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2018-01-05 17:00:01&apos;,&apos;718.92&apos;) 
INSERT INTO person (first_name,last_name) VALUES (&apos;Kevin&apos;,&apos;Keenan&apos;) 
SET @person_last_value = LAST_INSERT_ID() 
INSERT INTO person_stocks (person_id,symbol_id) VALUES (@person_last_value,@stock_symbols_last_value) 
INSERT INTO stock_symbols (symbol) VALUES (&apos;AAPL&apos;) 
SET @stock_symbols_last_value = LAST_INSERT_ID() 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2018-01-01 17:00:01&apos;,&apos;99.65&apos;) 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2018-01-02 17:00:01&apos;,&apos;98.83&apos;) 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2018-01-03 17:00:01&apos;,&apos;97.34&apos;) 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2018-01-04 17:00:01&apos;,&apos;97.46&apos;) 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2018-01-05 17:00:01&apos;,&apos;97.14&apos;) 
INSERT INTO person_stocks (person_id,symbol_id) VALUES (@person_last_value,@stock_symbols_last_value) 
INSERT INTO person (first_name,last_name) VALUES (&apos;Marks&apos;,&apos;Spencer&apos;) 
SET @person_last_value = LAST_INSERT_ID() 
INSERT INTO person_stocks (person_id,symbol_id) VALUES (@person_last_value,@stock_symbols_last_value) 
INSERT INTO stock_symbols (symbol) VALUES (&apos;AMZN&apos;) 
SET @stock_symbols_last_value = LAST_INSERT_ID() 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2016-06-09 17:00:01&apos;,&apos;727.65&apos;) 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2016-06-10 17:00:01&apos;,&apos;717.91&apos;) 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2016-06-13 17:00:01&apos;,&apos;715.24&apos;) 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2016-06-14 17:00:01&apos;,&apos;719.30&apos;) 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2016-06-15 17:00:01&apos;,&apos;714.26&apos;) 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2016-06-16 17:00:01&apos;,&apos;717.51&apos;) 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2016-06-17 17:00:01&apos;,&apos;706.39&apos;) 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2016-06-20 17:00:01&apos;,&apos;714.01&apos;) 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2016-06-21 17:00:01&apos;,&apos;715.82&apos;) 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2016-06-22 17:00:01&apos;,&apos;710.60&apos;) 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2016-06-23 17:00:01&apos;,&apos;722.08&apos;) 
INSERT INTO person_stocks (person_id,symbol_id) VALUES (@person_last_value,@stock_symbols_last_value) 
l,time,price) VALUES (&apos;AMZN&apos;,&apos;2015-02-03 00:00:01&apos;,&apos;363.21&apos;) 
</system-out>
    <system-err>Sun Oct 28 14:46:21 EDT 2018 WARN: Establishing SSL connection without server&apos;s identity verification is not recommended. According to MySQL 5.5.45+, 5.6.26+ and 5.7.6+ requirements SSL connection must be established by default if explicit option isn&apos;t set. For compliance with existing applications not using SSL the verifyServerCertificate property is set to &apos;false&apos;. You need either to explicitly disable SSL by setting useSSL=false, or set useSSL=true and provide truststore for server certificate verification.
Error executing: l,time,price) VALUES (&apos;AMZN&apos;,&apos;2015-02-03 00:00:01&apos;,&apos;363.21&apos;) 
java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near &apos;l,time,price) VALUES (&apos;AMZN&apos;,&apos;2015-02-03 00:00:01&apos;,&apos;363.21&apos;)&apos; at line 1
Sun Oct 28 14:46:22 EDT 2018 WARN: Establishing SSL connection without server&apos;s identity verification is not recommended. According to MySQL 5.5.45+, 5.6.26+ and 5.7.6+ requirements SSL connection must be established by default if explicit option isn&apos;t set. For compliance with existing applications not using SSL the verifyServerCertificate property is set to &apos;false&apos;. You need either to explicitly disable SSL by setting useSSL=false, or set useSSL=true and provide truststore for server certificate verification.
</system-err>
  </testcase>
  <testcase classname="edu.keenank.advancedjava.services.PersonServiceTest" name="testAddOrUpdatePersonPositive[0]" time="0.309">
    <error message="Could not add/update Person data. Unknown entity: edu.keenank.advancedjava.model.DatabasePerson" type="edu.keenank.advancedjava.services.PersonServiceException">edu.keenank.advancedjava.services.PersonServiceException: Could not add/update Person data. Unknown entity: edu.keenank.advancedjava.model.DatabasePerson
	at edu.keenank.advancedjava.services.DatabasePersonService.addOrUpdatePerson(DatabasePersonService.java:69)
	at edu.keenank.advancedjava.services.PersonServiceTest.testAddOrUpdatePersonPositive(PersonServiceTest.java:78)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:28)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:300)
	at org.junit.runners.Suite.runChild(Suite.java:128)
	at org.junit.runners.Suite.runChild(Suite.java:24)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:300)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:252)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:141)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:112)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
Caused by: org.hibernate.MappingException: Unknown entity: edu.keenank.advancedjava.model.DatabasePerson
	at org.hibernate.internal.SessionFactoryImpl.getEntityPersister(SessionFactoryImpl.java:1143)
	at org.hibernate.internal.SessionImpl.getEntityPersister(SessionImpl.java:1433)
	at org.hibernate.engine.internal.ForeignKeys.isTransient(ForeignKeys.java:208)
	at org.hibernate.event.internal.AbstractSaveEventListener.getEntityState(AbstractSaveEventListener.java:497)
	at org.hibernate.event.internal.DefaultSaveOrUpdateEventListener.performSaveOrUpdate(DefaultSaveOrUpdateEventListener.java:100)
	at org.hibernate.event.internal.DefaultSaveOrUpdateEventListener.onSaveOrUpdate(DefaultSaveOrUpdateEventListener.java:90)
	at org.hibernate.internal.SessionImpl.fireSaveOrUpdate(SessionImpl.java:735)
	at org.hibernate.internal.SessionImpl.saveOrUpdate(SessionImpl.java:727)
	at org.hibernate.internal.SessionImpl.saveOrUpdate(SessionImpl.java:723)
	at edu.keenank.advancedjava.services.DatabasePersonService.addOrUpdatePerson(DatabasePersonService.java:63)
	... 39 more
</error>
    <system-out>/* creates a new stocks database */ DROP DATABASE IF EXISTS stocks 
CREATE DATABASE stocks 
USE stocks 
DROP TABLE IF EXISTS quotes CASCADE 
DROP TABLE IF EXISTS person_stocks CASCADE 
DROP TABLE IF EXISTS person CASCADE 
DROP TABLE IF EXISTS stock_symbols CASCADE 
CREATE TABLE stock_symbols(    id INT NOT NULL AUTO_INCREMENT,    symbol VARCHAR(4) NOT NULL,    PRIMARY KEY (id) ) 
CREATE TABLE quotes(    id INT NOT NULL AUTO_INCREMENT,    symbol_id INT NOT NULL,    time TIMESTAMP NOT NULL,    price DECIMAL(10,2) NOT NULL,    PRIMARY KEY (id),    FOREIGN KEY (symbol_id) REFERENCES stock_symbols (id) ) 
CREATE TABLE person(    id INT NOT NULL AUTO_INCREMENT,    first_name VARCHAR(256) NOT NULL,    last_name VARCHAR(256) NOT NULL,    PRIMARY KEY (id) ) 
CREATE TABLE person_stocks(    id INT NOT NULL AUTO_INCREMENT,    person_id INT NOT NULL,    symbol_id INT NOT NULL,    PRIMARY KEY (id),    FOREIGN KEY (person_id) REFERENCES person (id),    FOREIGN KEY (symbol_id) REFERENCES stock_symbols (id) ) 
INSERT INTO stock_symbols (symbol) VALUES (&apos;GOOG&apos;) 
SET @stock_symbols_last_value = LAST_INSERT_ID() 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2018-01-01 17:00:01&apos;,&apos;728.58&apos;) 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2018-01-02 17:00:01&apos;,&apos;719.41&apos;) 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2018-01-03 17:00:01&apos;,&apos;718.36&apos;) 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2018-01-04 17:00:01&apos;,&apos;718.27&apos;) 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2018-01-05 17:00:01&apos;,&apos;718.92&apos;) 
INSERT INTO person (first_name,last_name) VALUES (&apos;Kevin&apos;,&apos;Keenan&apos;) 
SET @person_last_value = LAST_INSERT_ID() 
INSERT INTO person_stocks (person_id,symbol_id) VALUES (@person_last_value,@stock_symbols_last_value) 
INSERT INTO stock_symbols (symbol) VALUES (&apos;AAPL&apos;) 
SET @stock_symbols_last_value = LAST_INSERT_ID() 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2018-01-01 17:00:01&apos;,&apos;99.65&apos;) 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2018-01-02 17:00:01&apos;,&apos;98.83&apos;) 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2018-01-03 17:00:01&apos;,&apos;97.34&apos;) 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2018-01-04 17:00:01&apos;,&apos;97.46&apos;) 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2018-01-05 17:00:01&apos;,&apos;97.14&apos;) 
INSERT INTO person_stocks (person_id,symbol_id) VALUES (@person_last_value,@stock_symbols_last_value) 
INSERT INTO person (first_name,last_name) VALUES (&apos;Marks&apos;,&apos;Spencer&apos;) 
SET @person_last_value = LAST_INSERT_ID() 
INSERT INTO person_stocks (person_id,symbol_id) VALUES (@person_last_value,@stock_symbols_last_value) 
INSERT INTO stock_symbols (symbol) VALUES (&apos;AMZN&apos;) 
SET @stock_symbols_last_value = LAST_INSERT_ID() 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2016-06-09 17:00:01&apos;,&apos;727.65&apos;) 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2016-06-10 17:00:01&apos;,&apos;717.91&apos;) 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2016-06-13 17:00:01&apos;,&apos;715.24&apos;) 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2016-06-14 17:00:01&apos;,&apos;719.30&apos;) 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2016-06-15 17:00:01&apos;,&apos;714.26&apos;) 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2016-06-16 17:00:01&apos;,&apos;717.51&apos;) 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2016-06-17 17:00:01&apos;,&apos;706.39&apos;) 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2016-06-20 17:00:01&apos;,&apos;714.01&apos;) 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2016-06-21 17:00:01&apos;,&apos;715.82&apos;) 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2016-06-22 17:00:01&apos;,&apos;710.60&apos;) 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2016-06-23 17:00:01&apos;,&apos;722.08&apos;) 
INSERT INTO person_stocks (person_id,symbol_id) VALUES (@person_last_value,@stock_symbols_last_value) 
l,time,price) VALUES (&apos;AMZN&apos;,&apos;2015-02-03 00:00:01&apos;,&apos;363.21&apos;) 
</system-out>
    <system-err>Sun Oct 28 14:46:22 EDT 2018 WARN: Establishing SSL connection without server&apos;s identity verification is not recommended. According to MySQL 5.5.45+, 5.6.26+ and 5.7.6+ requirements SSL connection must be established by default if explicit option isn&apos;t set. For compliance with existing applications not using SSL the verifyServerCertificate property is set to &apos;false&apos;. You need either to explicitly disable SSL by setting useSSL=false, or set useSSL=true and provide truststore for server certificate verification.
Error executing: l,time,price) VALUES (&apos;AMZN&apos;,&apos;2015-02-03 00:00:01&apos;,&apos;363.21&apos;) 
java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near &apos;l,time,price) VALUES (&apos;AMZN&apos;,&apos;2015-02-03 00:00:01&apos;,&apos;363.21&apos;)&apos; at line 1
Sun Oct 28 14:46:22 EDT 2018 WARN: Establishing SSL connection without server&apos;s identity verification is not recommended. According to MySQL 5.5.45+, 5.6.26+ and 5.7.6+ requirements SSL connection must be established by default if explicit option isn&apos;t set. For compliance with existing applications not using SSL the verifyServerCertificate property is set to &apos;false&apos;. You need either to explicitly disable SSL by setting useSSL=false, or set useSSL=true and provide truststore for server certificate verification.
</system-err>
  </testcase>
  <testcase classname="edu.keenank.advancedjava.services.PersonServiceTest" name="testAddStockToPersonNegative[0]" time="0.339">
    <error message="Could not add/update Person data. Unknown entity: edu.keenank.advancedjava.model.DatabasePerson" type="edu.keenank.advancedjava.services.PersonServiceException">edu.keenank.advancedjava.services.PersonServiceException: Could not add/update Person data. Unknown entity: edu.keenank.advancedjava.model.DatabasePerson
	at edu.keenank.advancedjava.services.DatabasePersonService.addOrUpdatePerson(DatabasePersonService.java:69)
	at edu.keenank.advancedjava.services.PersonServiceTest.testAddStockToPersonNegative(PersonServiceTest.java:139)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:28)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:300)
	at org.junit.runners.Suite.runChild(Suite.java:128)
	at org.junit.runners.Suite.runChild(Suite.java:24)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:300)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:252)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:141)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:112)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
Caused by: org.hibernate.MappingException: Unknown entity: edu.keenank.advancedjava.model.DatabasePerson
	at org.hibernate.internal.SessionFactoryImpl.getEntityPersister(SessionFactoryImpl.java:1143)
	at org.hibernate.internal.SessionImpl.getEntityPersister(SessionImpl.java:1433)
	at org.hibernate.engine.internal.ForeignKeys.isTransient(ForeignKeys.java:208)
	at org.hibernate.event.internal.AbstractSaveEventListener.getEntityState(AbstractSaveEventListener.java:497)
	at org.hibernate.event.internal.DefaultSaveOrUpdateEventListener.performSaveOrUpdate(DefaultSaveOrUpdateEventListener.java:100)
	at org.hibernate.event.internal.DefaultSaveOrUpdateEventListener.onSaveOrUpdate(DefaultSaveOrUpdateEventListener.java:90)
	at org.hibernate.internal.SessionImpl.fireSaveOrUpdate(SessionImpl.java:735)
	at org.hibernate.internal.SessionImpl.saveOrUpdate(SessionImpl.java:727)
	at org.hibernate.internal.SessionImpl.saveOrUpdate(SessionImpl.java:723)
	at edu.keenank.advancedjava.services.DatabasePersonService.addOrUpdatePerson(DatabasePersonService.java:63)
	... 39 more
</error>
    <system-out>/* creates a new stocks database */ DROP DATABASE IF EXISTS stocks 
CREATE DATABASE stocks 
USE stocks 
DROP TABLE IF EXISTS quotes CASCADE 
DROP TABLE IF EXISTS person_stocks CASCADE 
DROP TABLE IF EXISTS person CASCADE 
DROP TABLE IF EXISTS stock_symbols CASCADE 
CREATE TABLE stock_symbols(    id INT NOT NULL AUTO_INCREMENT,    symbol VARCHAR(4) NOT NULL,    PRIMARY KEY (id) ) 
CREATE TABLE quotes(    id INT NOT NULL AUTO_INCREMENT,    symbol_id INT NOT NULL,    time TIMESTAMP NOT NULL,    price DECIMAL(10,2) NOT NULL,    PRIMARY KEY (id),    FOREIGN KEY (symbol_id) REFERENCES stock_symbols (id) ) 
CREATE TABLE person(    id INT NOT NULL AUTO_INCREMENT,    first_name VARCHAR(256) NOT NULL,    last_name VARCHAR(256) NOT NULL,    PRIMARY KEY (id) ) 
CREATE TABLE person_stocks(    id INT NOT NULL AUTO_INCREMENT,    person_id INT NOT NULL,    symbol_id INT NOT NULL,    PRIMARY KEY (id),    FOREIGN KEY (person_id) REFERENCES person (id),    FOREIGN KEY (symbol_id) REFERENCES stock_symbols (id) ) 
INSERT INTO stock_symbols (symbol) VALUES (&apos;GOOG&apos;) 
SET @stock_symbols_last_value = LAST_INSERT_ID() 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2018-01-01 17:00:01&apos;,&apos;728.58&apos;) 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2018-01-02 17:00:01&apos;,&apos;719.41&apos;) 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2018-01-03 17:00:01&apos;,&apos;718.36&apos;) 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2018-01-04 17:00:01&apos;,&apos;718.27&apos;) 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2018-01-05 17:00:01&apos;,&apos;718.92&apos;) 
INSERT INTO person (first_name,last_name) VALUES (&apos;Kevin&apos;,&apos;Keenan&apos;) 
SET @person_last_value = LAST_INSERT_ID() 
INSERT INTO person_stocks (person_id,symbol_id) VALUES (@person_last_value,@stock_symbols_last_value) 
INSERT INTO stock_symbols (symbol) VALUES (&apos;AAPL&apos;) 
SET @stock_symbols_last_value = LAST_INSERT_ID() 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2018-01-01 17:00:01&apos;,&apos;99.65&apos;) 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2018-01-02 17:00:01&apos;,&apos;98.83&apos;) 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2018-01-03 17:00:01&apos;,&apos;97.34&apos;) 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2018-01-04 17:00:01&apos;,&apos;97.46&apos;) 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2018-01-05 17:00:01&apos;,&apos;97.14&apos;) 
INSERT INTO person_stocks (person_id,symbol_id) VALUES (@person_last_value,@stock_symbols_last_value) 
INSERT INTO person (first_name,last_name) VALUES (&apos;Marks&apos;,&apos;Spencer&apos;) 
SET @person_last_value = LAST_INSERT_ID() 
INSERT INTO person_stocks (person_id,symbol_id) VALUES (@person_last_value,@stock_symbols_last_value) 
INSERT INTO stock_symbols (symbol) VALUES (&apos;AMZN&apos;) 
SET @stock_symbols_last_value = LAST_INSERT_ID() 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2016-06-09 17:00:01&apos;,&apos;727.65&apos;) 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2016-06-10 17:00:01&apos;,&apos;717.91&apos;) 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2016-06-13 17:00:01&apos;,&apos;715.24&apos;) 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2016-06-14 17:00:01&apos;,&apos;719.30&apos;) 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2016-06-15 17:00:01&apos;,&apos;714.26&apos;) 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2016-06-16 17:00:01&apos;,&apos;717.51&apos;) 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2016-06-17 17:00:01&apos;,&apos;706.39&apos;) 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2016-06-20 17:00:01&apos;,&apos;714.01&apos;) 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2016-06-21 17:00:01&apos;,&apos;715.82&apos;) 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2016-06-22 17:00:01&apos;,&apos;710.60&apos;) 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2016-06-23 17:00:01&apos;,&apos;722.08&apos;) 
INSERT INTO person_stocks (person_id,symbol_id) VALUES (@person_last_value,@stock_symbols_last_value) 
l,time,price) VALUES (&apos;AMZN&apos;,&apos;2015-02-03 00:00:01&apos;,&apos;363.21&apos;) 
</system-out>
    <system-err>Sun Oct 28 14:46:22 EDT 2018 WARN: Establishing SSL connection without server&apos;s identity verification is not recommended. According to MySQL 5.5.45+, 5.6.26+ and 5.7.6+ requirements SSL connection must be established by default if explicit option isn&apos;t set. For compliance with existing applications not using SSL the verifyServerCertificate property is set to &apos;false&apos;. You need either to explicitly disable SSL by setting useSSL=false, or set useSSL=true and provide truststore for server certificate verification.
Error executing: l,time,price) VALUES (&apos;AMZN&apos;,&apos;2015-02-03 00:00:01&apos;,&apos;363.21&apos;) 
java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near &apos;l,time,price) VALUES (&apos;AMZN&apos;,&apos;2015-02-03 00:00:01&apos;,&apos;363.21&apos;)&apos; at line 1
Sun Oct 28 14:46:22 EDT 2018 WARN: Establishing SSL connection without server&apos;s identity verification is not recommended. According to MySQL 5.5.45+, 5.6.26+ and 5.7.6+ requirements SSL connection must be established by default if explicit option isn&apos;t set. For compliance with existing applications not using SSL the verifyServerCertificate property is set to &apos;false&apos;. You need either to explicitly disable SSL by setting useSSL=false, or set useSSL=true and provide truststore for server certificate verification.
</system-err>
  </testcase>
  <testcase classname="edu.keenank.advancedjava.services.PersonServiceTest" name="testAddOrUpdatePersonNegative[0]" time="0.337">
    <error message="Index: -1" type="java.lang.IndexOutOfBoundsException">java.lang.IndexOutOfBoundsException: Index: -1
	at java.util.Collections$EmptyList.get(Collections.java:4454)
	at edu.keenank.advancedjava.services.PersonServiceTest.testAddOrUpdatePersonNegative(PersonServiceTest.java:92)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:28)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:300)
	at org.junit.runners.Suite.runChild(Suite.java:128)
	at org.junit.runners.Suite.runChild(Suite.java:24)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:300)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:252)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:141)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:112)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
</error>
    <system-out>/* creates a new stocks database */ DROP DATABASE IF EXISTS stocks 
CREATE DATABASE stocks 
USE stocks 
DROP TABLE IF EXISTS quotes CASCADE 
DROP TABLE IF EXISTS person_stocks CASCADE 
DROP TABLE IF EXISTS person CASCADE 
DROP TABLE IF EXISTS stock_symbols CASCADE 
CREATE TABLE stock_symbols(    id INT NOT NULL AUTO_INCREMENT,    symbol VARCHAR(4) NOT NULL,    PRIMARY KEY (id) ) 
CREATE TABLE quotes(    id INT NOT NULL AUTO_INCREMENT,    symbol_id INT NOT NULL,    time TIMESTAMP NOT NULL,    price DECIMAL(10,2) NOT NULL,    PRIMARY KEY (id),    FOREIGN KEY (symbol_id) REFERENCES stock_symbols (id) ) 
CREATE TABLE person(    id INT NOT NULL AUTO_INCREMENT,    first_name VARCHAR(256) NOT NULL,    last_name VARCHAR(256) NOT NULL,    PRIMARY KEY (id) ) 
CREATE TABLE person_stocks(    id INT NOT NULL AUTO_INCREMENT,    person_id INT NOT NULL,    symbol_id INT NOT NULL,    PRIMARY KEY (id),    FOREIGN KEY (person_id) REFERENCES person (id),    FOREIGN KEY (symbol_id) REFERENCES stock_symbols (id) ) 
INSERT INTO stock_symbols (symbol) VALUES (&apos;GOOG&apos;) 
SET @stock_symbols_last_value = LAST_INSERT_ID() 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2018-01-01 17:00:01&apos;,&apos;728.58&apos;) 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2018-01-02 17:00:01&apos;,&apos;719.41&apos;) 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2018-01-03 17:00:01&apos;,&apos;718.36&apos;) 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2018-01-04 17:00:01&apos;,&apos;718.27&apos;) 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2018-01-05 17:00:01&apos;,&apos;718.92&apos;) 
INSERT INTO person (first_name,last_name) VALUES (&apos;Kevin&apos;,&apos;Keenan&apos;) 
SET @person_last_value = LAST_INSERT_ID() 
INSERT INTO person_stocks (person_id,symbol_id) VALUES (@person_last_value,@stock_symbols_last_value) 
INSERT INTO stock_symbols (symbol) VALUES (&apos;AAPL&apos;) 
SET @stock_symbols_last_value = LAST_INSERT_ID() 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2018-01-01 17:00:01&apos;,&apos;99.65&apos;) 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2018-01-02 17:00:01&apos;,&apos;98.83&apos;) 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2018-01-03 17:00:01&apos;,&apos;97.34&apos;) 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2018-01-04 17:00:01&apos;,&apos;97.46&apos;) 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2018-01-05 17:00:01&apos;,&apos;97.14&apos;) 
INSERT INTO person_stocks (person_id,symbol_id) VALUES (@person_last_value,@stock_symbols_last_value) 
INSERT INTO person (first_name,last_name) VALUES (&apos;Marks&apos;,&apos;Spencer&apos;) 
SET @person_last_value = LAST_INSERT_ID() 
INSERT INTO person_stocks (person_id,symbol_id) VALUES (@person_last_value,@stock_symbols_last_value) 
INSERT INTO stock_symbols (symbol) VALUES (&apos;AMZN&apos;) 
SET @stock_symbols_last_value = LAST_INSERT_ID() 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2016-06-09 17:00:01&apos;,&apos;727.65&apos;) 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2016-06-10 17:00:01&apos;,&apos;717.91&apos;) 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2016-06-13 17:00:01&apos;,&apos;715.24&apos;) 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2016-06-14 17:00:01&apos;,&apos;719.30&apos;) 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2016-06-15 17:00:01&apos;,&apos;714.26&apos;) 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2016-06-16 17:00:01&apos;,&apos;717.51&apos;) 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2016-06-17 17:00:01&apos;,&apos;706.39&apos;) 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2016-06-20 17:00:01&apos;,&apos;714.01&apos;) 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2016-06-21 17:00:01&apos;,&apos;715.82&apos;) 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2016-06-22 17:00:01&apos;,&apos;710.60&apos;) 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2016-06-23 17:00:01&apos;,&apos;722.08&apos;) 
INSERT INTO person_stocks (person_id,symbol_id) VALUES (@person_last_value,@stock_symbols_last_value) 
l,time,price) VALUES (&apos;AMZN&apos;,&apos;2015-02-03 00:00:01&apos;,&apos;363.21&apos;) 
</system-out>
    <system-err>Sun Oct 28 14:46:22 EDT 2018 WARN: Establishing SSL connection without server&apos;s identity verification is not recommended. According to MySQL 5.5.45+, 5.6.26+ and 5.7.6+ requirements SSL connection must be established by default if explicit option isn&apos;t set. For compliance with existing applications not using SSL the verifyServerCertificate property is set to &apos;false&apos;. You need either to explicitly disable SSL by setting useSSL=false, or set useSSL=true and provide truststore for server certificate verification.
Error executing: l,time,price) VALUES (&apos;AMZN&apos;,&apos;2015-02-03 00:00:01&apos;,&apos;363.21&apos;) 
java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near &apos;l,time,price) VALUES (&apos;AMZN&apos;,&apos;2015-02-03 00:00:01&apos;,&apos;363.21&apos;)&apos; at line 1
Sun Oct 28 14:46:23 EDT 2018 WARN: Establishing SSL connection without server&apos;s identity verification is not recommended. According to MySQL 5.5.45+, 5.6.26+ and 5.7.6+ requirements SSL connection must be established by default if explicit option isn&apos;t set. For compliance with existing applications not using SSL the verifyServerCertificate property is set to &apos;false&apos;. You need either to explicitly disable SSL by setting useSSL=false, or set useSSL=true and provide truststore for server certificate verification.
</system-err>
  </testcase>
  <testcase classname="edu.keenank.advancedjava.services.PersonServiceTest" name="testGetStockSymbolsPositive[0]" time="0.364">
    <error message="Could not add/update Person data. Unknown entity: edu.keenank.advancedjava.model.DatabasePerson" type="edu.keenank.advancedjava.services.PersonServiceException">edu.keenank.advancedjava.services.PersonServiceException: Could not add/update Person data. Unknown entity: edu.keenank.advancedjava.model.DatabasePerson
	at edu.keenank.advancedjava.services.DatabasePersonService.addOrUpdatePerson(DatabasePersonService.java:69)
	at edu.keenank.advancedjava.services.PersonServiceTest.testGetStockSymbolsPositive(PersonServiceTest.java:101)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:28)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:300)
	at org.junit.runners.Suite.runChild(Suite.java:128)
	at org.junit.runners.Suite.runChild(Suite.java:24)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:300)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:252)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:141)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:112)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
Caused by: org.hibernate.MappingException: Unknown entity: edu.keenank.advancedjava.model.DatabasePerson
	at org.hibernate.internal.SessionFactoryImpl.getEntityPersister(SessionFactoryImpl.java:1143)
	at org.hibernate.internal.SessionImpl.getEntityPersister(SessionImpl.java:1433)
	at org.hibernate.engine.internal.ForeignKeys.isTransient(ForeignKeys.java:208)
	at org.hibernate.event.internal.AbstractSaveEventListener.getEntityState(AbstractSaveEventListener.java:497)
	at org.hibernate.event.internal.DefaultSaveOrUpdateEventListener.performSaveOrUpdate(DefaultSaveOrUpdateEventListener.java:100)
	at org.hibernate.event.internal.DefaultSaveOrUpdateEventListener.onSaveOrUpdate(DefaultSaveOrUpdateEventListener.java:90)
	at org.hibernate.internal.SessionImpl.fireSaveOrUpdate(SessionImpl.java:735)
	at org.hibernate.internal.SessionImpl.saveOrUpdate(SessionImpl.java:727)
	at org.hibernate.internal.SessionImpl.saveOrUpdate(SessionImpl.java:723)
	at edu.keenank.advancedjava.services.DatabasePersonService.addOrUpdatePerson(DatabasePersonService.java:63)
	... 39 more
</error>
    <system-out>/* creates a new stocks database */ DROP DATABASE IF EXISTS stocks 
CREATE DATABASE stocks 
USE stocks 
DROP TABLE IF EXISTS quotes CASCADE 
DROP TABLE IF EXISTS person_stocks CASCADE 
DROP TABLE IF EXISTS person CASCADE 
DROP TABLE IF EXISTS stock_symbols CASCADE 
CREATE TABLE stock_symbols(    id INT NOT NULL AUTO_INCREMENT,    symbol VARCHAR(4) NOT NULL,    PRIMARY KEY (id) ) 
CREATE TABLE quotes(    id INT NOT NULL AUTO_INCREMENT,    symbol_id INT NOT NULL,    time TIMESTAMP NOT NULL,    price DECIMAL(10,2) NOT NULL,    PRIMARY KEY (id),    FOREIGN KEY (symbol_id) REFERENCES stock_symbols (id) ) 
CREATE TABLE person(    id INT NOT NULL AUTO_INCREMENT,    first_name VARCHAR(256) NOT NULL,    last_name VARCHAR(256) NOT NULL,    PRIMARY KEY (id) ) 
CREATE TABLE person_stocks(    id INT NOT NULL AUTO_INCREMENT,    person_id INT NOT NULL,    symbol_id INT NOT NULL,    PRIMARY KEY (id),    FOREIGN KEY (person_id) REFERENCES person (id),    FOREIGN KEY (symbol_id) REFERENCES stock_symbols (id) ) 
INSERT INTO stock_symbols (symbol) VALUES (&apos;GOOG&apos;) 
SET @stock_symbols_last_value = LAST_INSERT_ID() 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2018-01-01 17:00:01&apos;,&apos;728.58&apos;) 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2018-01-02 17:00:01&apos;,&apos;719.41&apos;) 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2018-01-03 17:00:01&apos;,&apos;718.36&apos;) 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2018-01-04 17:00:01&apos;,&apos;718.27&apos;) 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2018-01-05 17:00:01&apos;,&apos;718.92&apos;) 
INSERT INTO person (first_name,last_name) VALUES (&apos;Kevin&apos;,&apos;Keenan&apos;) 
SET @person_last_value = LAST_INSERT_ID() 
INSERT INTO person_stocks (person_id,symbol_id) VALUES (@person_last_value,@stock_symbols_last_value) 
INSERT INTO stock_symbols (symbol) VALUES (&apos;AAPL&apos;) 
SET @stock_symbols_last_value = LAST_INSERT_ID() 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2018-01-01 17:00:01&apos;,&apos;99.65&apos;) 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2018-01-02 17:00:01&apos;,&apos;98.83&apos;) 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2018-01-03 17:00:01&apos;,&apos;97.34&apos;) 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2018-01-04 17:00:01&apos;,&apos;97.46&apos;) 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2018-01-05 17:00:01&apos;,&apos;97.14&apos;) 
INSERT INTO person_stocks (person_id,symbol_id) VALUES (@person_last_value,@stock_symbols_last_value) 
INSERT INTO person (first_name,last_name) VALUES (&apos;Marks&apos;,&apos;Spencer&apos;) 
SET @person_last_value = LAST_INSERT_ID() 
INSERT INTO person_stocks (person_id,symbol_id) VALUES (@person_last_value,@stock_symbols_last_value) 
INSERT INTO stock_symbols (symbol) VALUES (&apos;AMZN&apos;) 
SET @stock_symbols_last_value = LAST_INSERT_ID() 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2016-06-09 17:00:01&apos;,&apos;727.65&apos;) 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2016-06-10 17:00:01&apos;,&apos;717.91&apos;) 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2016-06-13 17:00:01&apos;,&apos;715.24&apos;) 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2016-06-14 17:00:01&apos;,&apos;719.30&apos;) 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2016-06-15 17:00:01&apos;,&apos;714.26&apos;) 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2016-06-16 17:00:01&apos;,&apos;717.51&apos;) 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2016-06-17 17:00:01&apos;,&apos;706.39&apos;) 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2016-06-20 17:00:01&apos;,&apos;714.01&apos;) 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2016-06-21 17:00:01&apos;,&apos;715.82&apos;) 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2016-06-22 17:00:01&apos;,&apos;710.60&apos;) 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2016-06-23 17:00:01&apos;,&apos;722.08&apos;) 
INSERT INTO person_stocks (person_id,symbol_id) VALUES (@person_last_value,@stock_symbols_last_value) 
l,time,price) VALUES (&apos;AMZN&apos;,&apos;2015-02-03 00:00:01&apos;,&apos;363.21&apos;) 
</system-out>
    <system-err>Sun Oct 28 14:46:23 EDT 2018 WARN: Establishing SSL connection without server&apos;s identity verification is not recommended. According to MySQL 5.5.45+, 5.6.26+ and 5.7.6+ requirements SSL connection must be established by default if explicit option isn&apos;t set. For compliance with existing applications not using SSL the verifyServerCertificate property is set to &apos;false&apos;. You need either to explicitly disable SSL by setting useSSL=false, or set useSSL=true and provide truststore for server certificate verification.
Error executing: l,time,price) VALUES (&apos;AMZN&apos;,&apos;2015-02-03 00:00:01&apos;,&apos;363.21&apos;) 
java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near &apos;l,time,price) VALUES (&apos;AMZN&apos;,&apos;2015-02-03 00:00:01&apos;,&apos;363.21&apos;)&apos; at line 1
Sun Oct 28 14:46:23 EDT 2018 WARN: Establishing SSL connection without server&apos;s identity verification is not recommended. According to MySQL 5.5.45+, 5.6.26+ and 5.7.6+ requirements SSL connection must be established by default if explicit option isn&apos;t set. For compliance with existing applications not using SSL the verifyServerCertificate property is set to &apos;false&apos;. You need either to explicitly disable SSL by setting useSSL=false, or set useSSL=true and provide truststore for server certificate verification.
</system-err>
  </testcase>
  <testcase classname="edu.keenank.advancedjava.services.PersonServiceTest" name="testGetPersonsPositive[1]" time="0.391">
    <error message="Index: 0" type="java.lang.IndexOutOfBoundsException">java.lang.IndexOutOfBoundsException: Index: 0
	at java.util.Collections$EmptyList.get(Collections.java:4454)
	at edu.keenank.advancedjava.services.PersonServiceTest.testGetPersonsPositive(PersonServiceTest.java:59)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:28)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:300)
	at org.junit.runners.Suite.runChild(Suite.java:128)
	at org.junit.runners.Suite.runChild(Suite.java:24)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:300)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:252)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:141)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:112)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
</error>
    <system-out>/* creates a new stocks database */ DROP DATABASE IF EXISTS stocks 
CREATE DATABASE stocks 
USE stocks 
DROP TABLE IF EXISTS quotes CASCADE 
DROP TABLE IF EXISTS person_stocks CASCADE 
DROP TABLE IF EXISTS person CASCADE 
DROP TABLE IF EXISTS stock_symbols CASCADE 
CREATE TABLE stock_symbols(    id INT NOT NULL AUTO_INCREMENT,    symbol VARCHAR(4) NOT NULL,    PRIMARY KEY (id) ) 
CREATE TABLE quotes(    id INT NOT NULL AUTO_INCREMENT,    symbol_id INT NOT NULL,    time TIMESTAMP NOT NULL,    price DECIMAL(10,2) NOT NULL,    PRIMARY KEY (id),    FOREIGN KEY (symbol_id) REFERENCES stock_symbols (id) ) 
CREATE TABLE person(    id INT NOT NULL AUTO_INCREMENT,    first_name VARCHAR(256) NOT NULL,    last_name VARCHAR(256) NOT NULL,    PRIMARY KEY (id) ) 
CREATE TABLE person_stocks(    id INT NOT NULL AUTO_INCREMENT,    person_id INT NOT NULL,    symbol_id INT NOT NULL,    PRIMARY KEY (id),    FOREIGN KEY (person_id) REFERENCES person (id),    FOREIGN KEY (symbol_id) REFERENCES stock_symbols (id) ) 
INSERT INTO stock_symbols (symbol) VALUES (&apos;GOOG&apos;) 
SET @stock_symbols_last_value = LAST_INSERT_ID() 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2018-01-01 17:00:01&apos;,&apos;728.58&apos;) 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2018-01-02 17:00:01&apos;,&apos;719.41&apos;) 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2018-01-03 17:00:01&apos;,&apos;718.36&apos;) 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2018-01-04 17:00:01&apos;,&apos;718.27&apos;) 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2018-01-05 17:00:01&apos;,&apos;718.92&apos;) 
INSERT INTO person (first_name,last_name) VALUES (&apos;Kevin&apos;,&apos;Keenan&apos;) 
SET @person_last_value = LAST_INSERT_ID() 
INSERT INTO person_stocks (person_id,symbol_id) VALUES (@person_last_value,@stock_symbols_last_value) 
INSERT INTO stock_symbols (symbol) VALUES (&apos;AAPL&apos;) 
SET @stock_symbols_last_value = LAST_INSERT_ID() 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2018-01-01 17:00:01&apos;,&apos;99.65&apos;) 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2018-01-02 17:00:01&apos;,&apos;98.83&apos;) 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2018-01-03 17:00:01&apos;,&apos;97.34&apos;) 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2018-01-04 17:00:01&apos;,&apos;97.46&apos;) 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2018-01-05 17:00:01&apos;,&apos;97.14&apos;) 
INSERT INTO person_stocks (person_id,symbol_id) VALUES (@person_last_value,@stock_symbols_last_value) 
INSERT INTO person (first_name,last_name) VALUES (&apos;Marks&apos;,&apos;Spencer&apos;) 
SET @person_last_value = LAST_INSERT_ID() 
INSERT INTO person_stocks (person_id,symbol_id) VALUES (@person_last_value,@stock_symbols_last_value) 
INSERT INTO stock_symbols (symbol) VALUES (&apos;AMZN&apos;) 
SET @stock_symbols_last_value = LAST_INSERT_ID() 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2016-06-09 17:00:01&apos;,&apos;727.65&apos;) 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2016-06-10 17:00:01&apos;,&apos;717.91&apos;) 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2016-06-13 17:00:01&apos;,&apos;715.24&apos;) 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2016-06-14 17:00:01&apos;,&apos;719.30&apos;) 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2016-06-15 17:00:01&apos;,&apos;714.26&apos;) 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2016-06-16 17:00:01&apos;,&apos;717.51&apos;) 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2016-06-17 17:00:01&apos;,&apos;706.39&apos;) 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2016-06-20 17:00:01&apos;,&apos;714.01&apos;) 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2016-06-21 17:00:01&apos;,&apos;715.82&apos;) 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2016-06-22 17:00:01&apos;,&apos;710.60&apos;) 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2016-06-23 17:00:01&apos;,&apos;722.08&apos;) 
INSERT INTO person_stocks (person_id,symbol_id) VALUES (@person_last_value,@stock_symbols_last_value) 
l,time,price) VALUES (&apos;AMZN&apos;,&apos;2015-02-03 00:00:01&apos;,&apos;363.21&apos;) 
</system-out>
    <system-err>Sun Oct 28 14:46:23 EDT 2018 WARN: Establishing SSL connection without server&apos;s identity verification is not recommended. According to MySQL 5.5.45+, 5.6.26+ and 5.7.6+ requirements SSL connection must be established by default if explicit option isn&apos;t set. For compliance with existing applications not using SSL the verifyServerCertificate property is set to &apos;false&apos;. You need either to explicitly disable SSL by setting useSSL=false, or set useSSL=true and provide truststore for server certificate verification.
Error executing: l,time,price) VALUES (&apos;AMZN&apos;,&apos;2015-02-03 00:00:01&apos;,&apos;363.21&apos;) 
java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near &apos;l,time,price) VALUES (&apos;AMZN&apos;,&apos;2015-02-03 00:00:01&apos;,&apos;363.21&apos;)&apos; at line 1
Sun Oct 28 14:46:23 EDT 2018 WARN: Establishing SSL connection without server&apos;s identity verification is not recommended. According to MySQL 5.5.45+, 5.6.26+ and 5.7.6+ requirements SSL connection must be established by default if explicit option isn&apos;t set. For compliance with existing applications not using SSL the verifyServerCertificate property is set to &apos;false&apos;. You need either to explicitly disable SSL by setting useSSL=false, or set useSSL=true and provide truststore for server certificate verification.
</system-err>
  </testcase>
  <testcase classname="edu.keenank.advancedjava.services.PersonServiceTest" name="testGetStockSymbolsNegative[1]" time="0.347">
    <error message="Could not add/update Person data. Unknown entity: edu.keenank.advancedjava.model.DatabasePerson" type="edu.keenank.advancedjava.services.PersonServiceException">edu.keenank.advancedjava.services.PersonServiceException: Could not add/update Person data. Unknown entity: edu.keenank.advancedjava.model.DatabasePerson
	at edu.keenank.advancedjava.services.DatabasePersonService.addOrUpdatePerson(DatabasePersonService.java:69)
	at edu.keenank.advancedjava.services.PersonServiceTest.testGetStockSymbolsNegative(PersonServiceTest.java:114)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:28)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:300)
	at org.junit.runners.Suite.runChild(Suite.java:128)
	at org.junit.runners.Suite.runChild(Suite.java:24)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:300)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:252)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:141)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:112)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
Caused by: org.hibernate.MappingException: Unknown entity: edu.keenank.advancedjava.model.DatabasePerson
	at org.hibernate.internal.SessionFactoryImpl.getEntityPersister(SessionFactoryImpl.java:1143)
	at org.hibernate.internal.SessionImpl.getEntityPersister(SessionImpl.java:1433)
	at org.hibernate.engine.internal.ForeignKeys.isTransient(ForeignKeys.java:208)
	at org.hibernate.event.internal.AbstractSaveEventListener.getEntityState(AbstractSaveEventListener.java:497)
	at org.hibernate.event.internal.DefaultSaveOrUpdateEventListener.performSaveOrUpdate(DefaultSaveOrUpdateEventListener.java:100)
	at org.hibernate.event.internal.DefaultSaveOrUpdateEventListener.onSaveOrUpdate(DefaultSaveOrUpdateEventListener.java:90)
	at org.hibernate.internal.SessionImpl.fireSaveOrUpdate(SessionImpl.java:735)
	at org.hibernate.internal.SessionImpl.saveOrUpdate(SessionImpl.java:727)
	at org.hibernate.internal.SessionImpl.saveOrUpdate(SessionImpl.java:723)
	at edu.keenank.advancedjava.services.DatabasePersonService.addOrUpdatePerson(DatabasePersonService.java:63)
	... 39 more
</error>
    <system-out>/* creates a new stocks database */ DROP DATABASE IF EXISTS stocks 
CREATE DATABASE stocks 
USE stocks 
DROP TABLE IF EXISTS quotes CASCADE 
DROP TABLE IF EXISTS person_stocks CASCADE 
DROP TABLE IF EXISTS person CASCADE 
DROP TABLE IF EXISTS stock_symbols CASCADE 
CREATE TABLE stock_symbols(    id INT NOT NULL AUTO_INCREMENT,    symbol VARCHAR(4) NOT NULL,    PRIMARY KEY (id) ) 
CREATE TABLE quotes(    id INT NOT NULL AUTO_INCREMENT,    symbol_id INT NOT NULL,    time TIMESTAMP NOT NULL,    price DECIMAL(10,2) NOT NULL,    PRIMARY KEY (id),    FOREIGN KEY (symbol_id) REFERENCES stock_symbols (id) ) 
CREATE TABLE person(    id INT NOT NULL AUTO_INCREMENT,    first_name VARCHAR(256) NOT NULL,    last_name VARCHAR(256) NOT NULL,    PRIMARY KEY (id) ) 
CREATE TABLE person_stocks(    id INT NOT NULL AUTO_INCREMENT,    person_id INT NOT NULL,    symbol_id INT NOT NULL,    PRIMARY KEY (id),    FOREIGN KEY (person_id) REFERENCES person (id),    FOREIGN KEY (symbol_id) REFERENCES stock_symbols (id) ) 
INSERT INTO stock_symbols (symbol) VALUES (&apos;GOOG&apos;) 
SET @stock_symbols_last_value = LAST_INSERT_ID() 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2018-01-01 17:00:01&apos;,&apos;728.58&apos;) 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2018-01-02 17:00:01&apos;,&apos;719.41&apos;) 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2018-01-03 17:00:01&apos;,&apos;718.36&apos;) 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2018-01-04 17:00:01&apos;,&apos;718.27&apos;) 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2018-01-05 17:00:01&apos;,&apos;718.92&apos;) 
INSERT INTO person (first_name,last_name) VALUES (&apos;Kevin&apos;,&apos;Keenan&apos;) 
SET @person_last_value = LAST_INSERT_ID() 
INSERT INTO person_stocks (person_id,symbol_id) VALUES (@person_last_value,@stock_symbols_last_value) 
INSERT INTO stock_symbols (symbol) VALUES (&apos;AAPL&apos;) 
SET @stock_symbols_last_value = LAST_INSERT_ID() 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2018-01-01 17:00:01&apos;,&apos;99.65&apos;) 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2018-01-02 17:00:01&apos;,&apos;98.83&apos;) 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2018-01-03 17:00:01&apos;,&apos;97.34&apos;) 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2018-01-04 17:00:01&apos;,&apos;97.46&apos;) 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2018-01-05 17:00:01&apos;,&apos;97.14&apos;) 
INSERT INTO person_stocks (person_id,symbol_id) VALUES (@person_last_value,@stock_symbols_last_value) 
INSERT INTO person (first_name,last_name) VALUES (&apos;Marks&apos;,&apos;Spencer&apos;) 
SET @person_last_value = LAST_INSERT_ID() 
INSERT INTO person_stocks (person_id,symbol_id) VALUES (@person_last_value,@stock_symbols_last_value) 
INSERT INTO stock_symbols (symbol) VALUES (&apos;AMZN&apos;) 
SET @stock_symbols_last_value = LAST_INSERT_ID() 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2016-06-09 17:00:01&apos;,&apos;727.65&apos;) 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2016-06-10 17:00:01&apos;,&apos;717.91&apos;) 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2016-06-13 17:00:01&apos;,&apos;715.24&apos;) 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2016-06-14 17:00:01&apos;,&apos;719.30&apos;) 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2016-06-15 17:00:01&apos;,&apos;714.26&apos;) 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2016-06-16 17:00:01&apos;,&apos;717.51&apos;) 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2016-06-17 17:00:01&apos;,&apos;706.39&apos;) 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2016-06-20 17:00:01&apos;,&apos;714.01&apos;) 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2016-06-21 17:00:01&apos;,&apos;715.82&apos;) 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2016-06-22 17:00:01&apos;,&apos;710.60&apos;) 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2016-06-23 17:00:01&apos;,&apos;722.08&apos;) 
INSERT INTO person_stocks (person_id,symbol_id) VALUES (@person_last_value,@stock_symbols_last_value) 
l,time,price) VALUES (&apos;AMZN&apos;,&apos;2015-02-03 00:00:01&apos;,&apos;363.21&apos;) 
</system-out>
    <system-err>Sun Oct 28 14:46:23 EDT 2018 WARN: Establishing SSL connection without server&apos;s identity verification is not recommended. According to MySQL 5.5.45+, 5.6.26+ and 5.7.6+ requirements SSL connection must be established by default if explicit option isn&apos;t set. For compliance with existing applications not using SSL the verifyServerCertificate property is set to &apos;false&apos;. You need either to explicitly disable SSL by setting useSSL=false, or set useSSL=true and provide truststore for server certificate verification.
Error executing: l,time,price) VALUES (&apos;AMZN&apos;,&apos;2015-02-03 00:00:01&apos;,&apos;363.21&apos;) 
java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near &apos;l,time,price) VALUES (&apos;AMZN&apos;,&apos;2015-02-03 00:00:01&apos;,&apos;363.21&apos;)&apos; at line 1
Sun Oct 28 14:46:24 EDT 2018 WARN: Establishing SSL connection without server&apos;s identity verification is not recommended. According to MySQL 5.5.45+, 5.6.26+ and 5.7.6+ requirements SSL connection must be established by default if explicit option isn&apos;t set. For compliance with existing applications not using SSL the verifyServerCertificate property is set to &apos;false&apos;. You need either to explicitly disable SSL by setting useSSL=false, or set useSSL=true and provide truststore for server certificate verification.
</system-err>
  </testcase>
  <testcase classname="edu.keenank.advancedjava.services.PersonServiceTest" name="testGetPersonsNegative[1]" time="0.353">
    <failure message="Return value of getPersons() is an empty list" type="java.lang.AssertionError">java.lang.AssertionError: Return value of getPersons() is an empty list
	at org.junit.Assert.fail(Assert.java:93)
	at org.junit.Assert.assertTrue(Assert.java:43)
	at org.junit.Assert.assertFalse(Assert.java:68)
	at edu.keenank.advancedjava.services.PersonServiceTest.testGetPersonsNegative(PersonServiceTest.java:68)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:28)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:300)
	at org.junit.runners.Suite.runChild(Suite.java:128)
	at org.junit.runners.Suite.runChild(Suite.java:24)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:300)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:252)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:141)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:112)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
</failure>
    <system-out>/* creates a new stocks database */ DROP DATABASE IF EXISTS stocks 
CREATE DATABASE stocks 
USE stocks 
DROP TABLE IF EXISTS quotes CASCADE 
DROP TABLE IF EXISTS person_stocks CASCADE 
DROP TABLE IF EXISTS person CASCADE 
DROP TABLE IF EXISTS stock_symbols CASCADE 
CREATE TABLE stock_symbols(    id INT NOT NULL AUTO_INCREMENT,    symbol VARCHAR(4) NOT NULL,    PRIMARY KEY (id) ) 
CREATE TABLE quotes(    id INT NOT NULL AUTO_INCREMENT,    symbol_id INT NOT NULL,    time TIMESTAMP NOT NULL,    price DECIMAL(10,2) NOT NULL,    PRIMARY KEY (id),    FOREIGN KEY (symbol_id) REFERENCES stock_symbols (id) ) 
CREATE TABLE person(    id INT NOT NULL AUTO_INCREMENT,    first_name VARCHAR(256) NOT NULL,    last_name VARCHAR(256) NOT NULL,    PRIMARY KEY (id) ) 
CREATE TABLE person_stocks(    id INT NOT NULL AUTO_INCREMENT,    person_id INT NOT NULL,    symbol_id INT NOT NULL,    PRIMARY KEY (id),    FOREIGN KEY (person_id) REFERENCES person (id),    FOREIGN KEY (symbol_id) REFERENCES stock_symbols (id) ) 
INSERT INTO stock_symbols (symbol) VALUES (&apos;GOOG&apos;) 
SET @stock_symbols_last_value = LAST_INSERT_ID() 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2018-01-01 17:00:01&apos;,&apos;728.58&apos;) 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2018-01-02 17:00:01&apos;,&apos;719.41&apos;) 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2018-01-03 17:00:01&apos;,&apos;718.36&apos;) 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2018-01-04 17:00:01&apos;,&apos;718.27&apos;) 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2018-01-05 17:00:01&apos;,&apos;718.92&apos;) 
INSERT INTO person (first_name,last_name) VALUES (&apos;Kevin&apos;,&apos;Keenan&apos;) 
SET @person_last_value = LAST_INSERT_ID() 
INSERT INTO person_stocks (person_id,symbol_id) VALUES (@person_last_value,@stock_symbols_last_value) 
INSERT INTO stock_symbols (symbol) VALUES (&apos;AAPL&apos;) 
SET @stock_symbols_last_value = LAST_INSERT_ID() 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2018-01-01 17:00:01&apos;,&apos;99.65&apos;) 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2018-01-02 17:00:01&apos;,&apos;98.83&apos;) 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2018-01-03 17:00:01&apos;,&apos;97.34&apos;) 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2018-01-04 17:00:01&apos;,&apos;97.46&apos;) 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2018-01-05 17:00:01&apos;,&apos;97.14&apos;) 
INSERT INTO person_stocks (person_id,symbol_id) VALUES (@person_last_value,@stock_symbols_last_value) 
INSERT INTO person (first_name,last_name) VALUES (&apos;Marks&apos;,&apos;Spencer&apos;) 
SET @person_last_value = LAST_INSERT_ID() 
INSERT INTO person_stocks (person_id,symbol_id) VALUES (@person_last_value,@stock_symbols_last_value) 
INSERT INTO stock_symbols (symbol) VALUES (&apos;AMZN&apos;) 
SET @stock_symbols_last_value = LAST_INSERT_ID() 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2016-06-09 17:00:01&apos;,&apos;727.65&apos;) 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2016-06-10 17:00:01&apos;,&apos;717.91&apos;) 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2016-06-13 17:00:01&apos;,&apos;715.24&apos;) 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2016-06-14 17:00:01&apos;,&apos;719.30&apos;) 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2016-06-15 17:00:01&apos;,&apos;714.26&apos;) 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2016-06-16 17:00:01&apos;,&apos;717.51&apos;) 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2016-06-17 17:00:01&apos;,&apos;706.39&apos;) 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2016-06-20 17:00:01&apos;,&apos;714.01&apos;) 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2016-06-21 17:00:01&apos;,&apos;715.82&apos;) 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2016-06-22 17:00:01&apos;,&apos;710.60&apos;) 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2016-06-23 17:00:01&apos;,&apos;722.08&apos;) 
INSERT INTO person_stocks (person_id,symbol_id) VALUES (@person_last_value,@stock_symbols_last_value) 
l,time,price) VALUES (&apos;AMZN&apos;,&apos;2015-02-03 00:00:01&apos;,&apos;363.21&apos;) 
</system-out>
    <system-err>Sun Oct 28 14:46:24 EDT 2018 WARN: Establishing SSL connection without server&apos;s identity verification is not recommended. According to MySQL 5.5.45+, 5.6.26+ and 5.7.6+ requirements SSL connection must be established by default if explicit option isn&apos;t set. For compliance with existing applications not using SSL the verifyServerCertificate property is set to &apos;false&apos;. You need either to explicitly disable SSL by setting useSSL=false, or set useSSL=true and provide truststore for server certificate verification.
Error executing: l,time,price) VALUES (&apos;AMZN&apos;,&apos;2015-02-03 00:00:01&apos;,&apos;363.21&apos;) 
java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near &apos;l,time,price) VALUES (&apos;AMZN&apos;,&apos;2015-02-03 00:00:01&apos;,&apos;363.21&apos;)&apos; at line 1
Sun Oct 28 14:46:24 EDT 2018 WARN: Establishing SSL connection without server&apos;s identity verification is not recommended. According to MySQL 5.5.45+, 5.6.26+ and 5.7.6+ requirements SSL connection must be established by default if explicit option isn&apos;t set. For compliance with existing applications not using SSL the verifyServerCertificate property is set to &apos;false&apos;. You need either to explicitly disable SSL by setting useSSL=false, or set useSSL=true and provide truststore for server certificate verification.
</system-err>
  </testcase>
  <testcase classname="edu.keenank.advancedjava.services.PersonServiceTest" name="testAddStockToPersonPositive[1]" time="0.358">
    <error message="Could not add/update Person data. Unknown entity: edu.keenank.advancedjava.model.DatabasePerson" type="edu.keenank.advancedjava.services.PersonServiceException">edu.keenank.advancedjava.services.PersonServiceException: Could not add/update Person data. Unknown entity: edu.keenank.advancedjava.model.DatabasePerson
	at edu.keenank.advancedjava.services.DatabasePersonService.addOrUpdatePerson(DatabasePersonService.java:69)
	at edu.keenank.advancedjava.services.PersonServiceTest.testAddStockToPersonPositive(PersonServiceTest.java:127)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:28)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:300)
	at org.junit.runners.Suite.runChild(Suite.java:128)
	at org.junit.runners.Suite.runChild(Suite.java:24)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:300)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:252)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:141)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:112)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
Caused by: org.hibernate.MappingException: Unknown entity: edu.keenank.advancedjava.model.DatabasePerson
	at org.hibernate.internal.SessionFactoryImpl.getEntityPersister(SessionFactoryImpl.java:1143)
	at org.hibernate.internal.SessionImpl.getEntityPersister(SessionImpl.java:1433)
	at org.hibernate.engine.internal.ForeignKeys.isTransient(ForeignKeys.java:208)
	at org.hibernate.event.internal.AbstractSaveEventListener.getEntityState(AbstractSaveEventListener.java:497)
	at org.hibernate.event.internal.DefaultSaveOrUpdateEventListener.performSaveOrUpdate(DefaultSaveOrUpdateEventListener.java:100)
	at org.hibernate.event.internal.DefaultSaveOrUpdateEventListener.onSaveOrUpdate(DefaultSaveOrUpdateEventListener.java:90)
	at org.hibernate.internal.SessionImpl.fireSaveOrUpdate(SessionImpl.java:735)
	at org.hibernate.internal.SessionImpl.saveOrUpdate(SessionImpl.java:727)
	at org.hibernate.internal.SessionImpl.saveOrUpdate(SessionImpl.java:723)
	at edu.keenank.advancedjava.services.DatabasePersonService.addOrUpdatePerson(DatabasePersonService.java:63)
	... 39 more
</error>
    <system-out>/* creates a new stocks database */ DROP DATABASE IF EXISTS stocks 
CREATE DATABASE stocks 
USE stocks 
DROP TABLE IF EXISTS quotes CASCADE 
DROP TABLE IF EXISTS person_stocks CASCADE 
DROP TABLE IF EXISTS person CASCADE 
DROP TABLE IF EXISTS stock_symbols CASCADE 
CREATE TABLE stock_symbols(    id INT NOT NULL AUTO_INCREMENT,    symbol VARCHAR(4) NOT NULL,    PRIMARY KEY (id) ) 
CREATE TABLE quotes(    id INT NOT NULL AUTO_INCREMENT,    symbol_id INT NOT NULL,    time TIMESTAMP NOT NULL,    price DECIMAL(10,2) NOT NULL,    PRIMARY KEY (id),    FOREIGN KEY (symbol_id) REFERENCES stock_symbols (id) ) 
CREATE TABLE person(    id INT NOT NULL AUTO_INCREMENT,    first_name VARCHAR(256) NOT NULL,    last_name VARCHAR(256) NOT NULL,    PRIMARY KEY (id) ) 
CREATE TABLE person_stocks(    id INT NOT NULL AUTO_INCREMENT,    person_id INT NOT NULL,    symbol_id INT NOT NULL,    PRIMARY KEY (id),    FOREIGN KEY (person_id) REFERENCES person (id),    FOREIGN KEY (symbol_id) REFERENCES stock_symbols (id) ) 
INSERT INTO stock_symbols (symbol) VALUES (&apos;GOOG&apos;) 
SET @stock_symbols_last_value = LAST_INSERT_ID() 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2018-01-01 17:00:01&apos;,&apos;728.58&apos;) 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2018-01-02 17:00:01&apos;,&apos;719.41&apos;) 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2018-01-03 17:00:01&apos;,&apos;718.36&apos;) 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2018-01-04 17:00:01&apos;,&apos;718.27&apos;) 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2018-01-05 17:00:01&apos;,&apos;718.92&apos;) 
INSERT INTO person (first_name,last_name) VALUES (&apos;Kevin&apos;,&apos;Keenan&apos;) 
SET @person_last_value = LAST_INSERT_ID() 
INSERT INTO person_stocks (person_id,symbol_id) VALUES (@person_last_value,@stock_symbols_last_value) 
INSERT INTO stock_symbols (symbol) VALUES (&apos;AAPL&apos;) 
SET @stock_symbols_last_value = LAST_INSERT_ID() 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2018-01-01 17:00:01&apos;,&apos;99.65&apos;) 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2018-01-02 17:00:01&apos;,&apos;98.83&apos;) 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2018-01-03 17:00:01&apos;,&apos;97.34&apos;) 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2018-01-04 17:00:01&apos;,&apos;97.46&apos;) 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2018-01-05 17:00:01&apos;,&apos;97.14&apos;) 
INSERT INTO person_stocks (person_id,symbol_id) VALUES (@person_last_value,@stock_symbols_last_value) 
INSERT INTO person (first_name,last_name) VALUES (&apos;Marks&apos;,&apos;Spencer&apos;) 
SET @person_last_value = LAST_INSERT_ID() 
INSERT INTO person_stocks (person_id,symbol_id) VALUES (@person_last_value,@stock_symbols_last_value) 
INSERT INTO stock_symbols (symbol) VALUES (&apos;AMZN&apos;) 
SET @stock_symbols_last_value = LAST_INSERT_ID() 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2016-06-09 17:00:01&apos;,&apos;727.65&apos;) 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2016-06-10 17:00:01&apos;,&apos;717.91&apos;) 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2016-06-13 17:00:01&apos;,&apos;715.24&apos;) 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2016-06-14 17:00:01&apos;,&apos;719.30&apos;) 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2016-06-15 17:00:01&apos;,&apos;714.26&apos;) 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2016-06-16 17:00:01&apos;,&apos;717.51&apos;) 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2016-06-17 17:00:01&apos;,&apos;706.39&apos;) 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2016-06-20 17:00:01&apos;,&apos;714.01&apos;) 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2016-06-21 17:00:01&apos;,&apos;715.82&apos;) 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2016-06-22 17:00:01&apos;,&apos;710.60&apos;) 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2016-06-23 17:00:01&apos;,&apos;722.08&apos;) 
INSERT INTO person_stocks (person_id,symbol_id) VALUES (@person_last_value,@stock_symbols_last_value) 
l,time,price) VALUES (&apos;AMZN&apos;,&apos;2015-02-03 00:00:01&apos;,&apos;363.21&apos;) 
</system-out>
    <system-err>Sun Oct 28 14:46:24 EDT 2018 WARN: Establishing SSL connection without server&apos;s identity verification is not recommended. According to MySQL 5.5.45+, 5.6.26+ and 5.7.6+ requirements SSL connection must be established by default if explicit option isn&apos;t set. For compliance with existing applications not using SSL the verifyServerCertificate property is set to &apos;false&apos;. You need either to explicitly disable SSL by setting useSSL=false, or set useSSL=true and provide truststore for server certificate verification.
Error executing: l,time,price) VALUES (&apos;AMZN&apos;,&apos;2015-02-03 00:00:01&apos;,&apos;363.21&apos;) 
java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near &apos;l,time,price) VALUES (&apos;AMZN&apos;,&apos;2015-02-03 00:00:01&apos;,&apos;363.21&apos;)&apos; at line 1
Sun Oct 28 14:46:24 EDT 2018 WARN: Establishing SSL connection without server&apos;s identity verification is not recommended. According to MySQL 5.5.45+, 5.6.26+ and 5.7.6+ requirements SSL connection must be established by default if explicit option isn&apos;t set. For compliance with existing applications not using SSL the verifyServerCertificate property is set to &apos;false&apos;. You need either to explicitly disable SSL by setting useSSL=false, or set useSSL=true and provide truststore for server certificate verification.
</system-err>
  </testcase>
  <testcase classname="edu.keenank.advancedjava.services.PersonServiceTest" name="testAddOrUpdatePersonPositive[1]" time="0.327">
    <error message="Could not add/update Person data. Unknown entity: edu.keenank.advancedjava.model.DatabasePerson" type="edu.keenank.advancedjava.services.PersonServiceException">edu.keenank.advancedjava.services.PersonServiceException: Could not add/update Person data. Unknown entity: edu.keenank.advancedjava.model.DatabasePerson
	at edu.keenank.advancedjava.services.DatabasePersonService.addOrUpdatePerson(DatabasePersonService.java:69)
	at edu.keenank.advancedjava.services.PersonServiceTest.testAddOrUpdatePersonPositive(PersonServiceTest.java:78)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:28)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:300)
	at org.junit.runners.Suite.runChild(Suite.java:128)
	at org.junit.runners.Suite.runChild(Suite.java:24)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:300)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:252)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:141)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:112)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
Caused by: org.hibernate.MappingException: Unknown entity: edu.keenank.advancedjava.model.DatabasePerson
	at org.hibernate.internal.SessionFactoryImpl.getEntityPersister(SessionFactoryImpl.java:1143)
	at org.hibernate.internal.SessionImpl.getEntityPersister(SessionImpl.java:1433)
	at org.hibernate.engine.internal.ForeignKeys.isTransient(ForeignKeys.java:208)
	at org.hibernate.event.internal.AbstractSaveEventListener.getEntityState(AbstractSaveEventListener.java:497)
	at org.hibernate.event.internal.DefaultSaveOrUpdateEventListener.performSaveOrUpdate(DefaultSaveOrUpdateEventListener.java:100)
	at org.hibernate.event.internal.DefaultSaveOrUpdateEventListener.onSaveOrUpdate(DefaultSaveOrUpdateEventListener.java:90)
	at org.hibernate.internal.SessionImpl.fireSaveOrUpdate(SessionImpl.java:735)
	at org.hibernate.internal.SessionImpl.saveOrUpdate(SessionImpl.java:727)
	at org.hibernate.internal.SessionImpl.saveOrUpdate(SessionImpl.java:723)
	at edu.keenank.advancedjava.services.DatabasePersonService.addOrUpdatePerson(DatabasePersonService.java:63)
	... 39 more
</error>
    <system-out>/* creates a new stocks database */ DROP DATABASE IF EXISTS stocks 
CREATE DATABASE stocks 
USE stocks 
DROP TABLE IF EXISTS quotes CASCADE 
DROP TABLE IF EXISTS person_stocks CASCADE 
DROP TABLE IF EXISTS person CASCADE 
DROP TABLE IF EXISTS stock_symbols CASCADE 
CREATE TABLE stock_symbols(    id INT NOT NULL AUTO_INCREMENT,    symbol VARCHAR(4) NOT NULL,    PRIMARY KEY (id) ) 
CREATE TABLE quotes(    id INT NOT NULL AUTO_INCREMENT,    symbol_id INT NOT NULL,    time TIMESTAMP NOT NULL,    price DECIMAL(10,2) NOT NULL,    PRIMARY KEY (id),    FOREIGN KEY (symbol_id) REFERENCES stock_symbols (id) ) 
CREATE TABLE person(    id INT NOT NULL AUTO_INCREMENT,    first_name VARCHAR(256) NOT NULL,    last_name VARCHAR(256) NOT NULL,    PRIMARY KEY (id) ) 
CREATE TABLE person_stocks(    id INT NOT NULL AUTO_INCREMENT,    person_id INT NOT NULL,    symbol_id INT NOT NULL,    PRIMARY KEY (id),    FOREIGN KEY (person_id) REFERENCES person (id),    FOREIGN KEY (symbol_id) REFERENCES stock_symbols (id) ) 
INSERT INTO stock_symbols (symbol) VALUES (&apos;GOOG&apos;) 
SET @stock_symbols_last_value = LAST_INSERT_ID() 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2018-01-01 17:00:01&apos;,&apos;728.58&apos;) 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2018-01-02 17:00:01&apos;,&apos;719.41&apos;) 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2018-01-03 17:00:01&apos;,&apos;718.36&apos;) 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2018-01-04 17:00:01&apos;,&apos;718.27&apos;) 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2018-01-05 17:00:01&apos;,&apos;718.92&apos;) 
INSERT INTO person (first_name,last_name) VALUES (&apos;Kevin&apos;,&apos;Keenan&apos;) 
SET @person_last_value = LAST_INSERT_ID() 
INSERT INTO person_stocks (person_id,symbol_id) VALUES (@person_last_value,@stock_symbols_last_value) 
INSERT INTO stock_symbols (symbol) VALUES (&apos;AAPL&apos;) 
SET @stock_symbols_last_value = LAST_INSERT_ID() 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2018-01-01 17:00:01&apos;,&apos;99.65&apos;) 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2018-01-02 17:00:01&apos;,&apos;98.83&apos;) 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2018-01-03 17:00:01&apos;,&apos;97.34&apos;) 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2018-01-04 17:00:01&apos;,&apos;97.46&apos;) 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2018-01-05 17:00:01&apos;,&apos;97.14&apos;) 
INSERT INTO person_stocks (person_id,symbol_id) VALUES (@person_last_value,@stock_symbols_last_value) 
INSERT INTO person (first_name,last_name) VALUES (&apos;Marks&apos;,&apos;Spencer&apos;) 
SET @person_last_value = LAST_INSERT_ID() 
INSERT INTO person_stocks (person_id,symbol_id) VALUES (@person_last_value,@stock_symbols_last_value) 
INSERT INTO stock_symbols (symbol) VALUES (&apos;AMZN&apos;) 
SET @stock_symbols_last_value = LAST_INSERT_ID() 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2016-06-09 17:00:01&apos;,&apos;727.65&apos;) 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2016-06-10 17:00:01&apos;,&apos;717.91&apos;) 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2016-06-13 17:00:01&apos;,&apos;715.24&apos;) 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2016-06-14 17:00:01&apos;,&apos;719.30&apos;) 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2016-06-15 17:00:01&apos;,&apos;714.26&apos;) 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2016-06-16 17:00:01&apos;,&apos;717.51&apos;) 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2016-06-17 17:00:01&apos;,&apos;706.39&apos;) 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2016-06-20 17:00:01&apos;,&apos;714.01&apos;) 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2016-06-21 17:00:01&apos;,&apos;715.82&apos;) 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2016-06-22 17:00:01&apos;,&apos;710.60&apos;) 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2016-06-23 17:00:01&apos;,&apos;722.08&apos;) 
INSERT INTO person_stocks (person_id,symbol_id) VALUES (@person_last_value,@stock_symbols_last_value) 
l,time,price) VALUES (&apos;AMZN&apos;,&apos;2015-02-03 00:00:01&apos;,&apos;363.21&apos;) 
</system-out>
    <system-err>Sun Oct 28 14:46:24 EDT 2018 WARN: Establishing SSL connection without server&apos;s identity verification is not recommended. According to MySQL 5.5.45+, 5.6.26+ and 5.7.6+ requirements SSL connection must be established by default if explicit option isn&apos;t set. For compliance with existing applications not using SSL the verifyServerCertificate property is set to &apos;false&apos;. You need either to explicitly disable SSL by setting useSSL=false, or set useSSL=true and provide truststore for server certificate verification.
Error executing: l,time,price) VALUES (&apos;AMZN&apos;,&apos;2015-02-03 00:00:01&apos;,&apos;363.21&apos;) 
java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near &apos;l,time,price) VALUES (&apos;AMZN&apos;,&apos;2015-02-03 00:00:01&apos;,&apos;363.21&apos;)&apos; at line 1
Sun Oct 28 14:46:25 EDT 2018 WARN: Establishing SSL connection without server&apos;s identity verification is not recommended. According to MySQL 5.5.45+, 5.6.26+ and 5.7.6+ requirements SSL connection must be established by default if explicit option isn&apos;t set. For compliance with existing applications not using SSL the verifyServerCertificate property is set to &apos;false&apos;. You need either to explicitly disable SSL by setting useSSL=false, or set useSSL=true and provide truststore for server certificate verification.
</system-err>
  </testcase>
  <testcase classname="edu.keenank.advancedjava.services.PersonServiceTest" name="testAddStockToPersonNegative[1]" time="0.282">
    <error message="Could not add/update Person data. Unknown entity: edu.keenank.advancedjava.model.DatabasePerson" type="edu.keenank.advancedjava.services.PersonServiceException">edu.keenank.advancedjava.services.PersonServiceException: Could not add/update Person data. Unknown entity: edu.keenank.advancedjava.model.DatabasePerson
	at edu.keenank.advancedjava.services.DatabasePersonService.addOrUpdatePerson(DatabasePersonService.java:69)
	at edu.keenank.advancedjava.services.PersonServiceTest.testAddStockToPersonNegative(PersonServiceTest.java:139)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:28)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:300)
	at org.junit.runners.Suite.runChild(Suite.java:128)
	at org.junit.runners.Suite.runChild(Suite.java:24)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:300)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:252)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:141)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:112)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
Caused by: org.hibernate.MappingException: Unknown entity: edu.keenank.advancedjava.model.DatabasePerson
	at org.hibernate.internal.SessionFactoryImpl.getEntityPersister(SessionFactoryImpl.java:1143)
	at org.hibernate.internal.SessionImpl.getEntityPersister(SessionImpl.java:1433)
	at org.hibernate.engine.internal.ForeignKeys.isTransient(ForeignKeys.java:208)
	at org.hibernate.event.internal.AbstractSaveEventListener.getEntityState(AbstractSaveEventListener.java:497)
	at org.hibernate.event.internal.DefaultSaveOrUpdateEventListener.performSaveOrUpdate(DefaultSaveOrUpdateEventListener.java:100)
	at org.hibernate.event.internal.DefaultSaveOrUpdateEventListener.onSaveOrUpdate(DefaultSaveOrUpdateEventListener.java:90)
	at org.hibernate.internal.SessionImpl.fireSaveOrUpdate(SessionImpl.java:735)
	at org.hibernate.internal.SessionImpl.saveOrUpdate(SessionImpl.java:727)
	at org.hibernate.internal.SessionImpl.saveOrUpdate(SessionImpl.java:723)
	at edu.keenank.advancedjava.services.DatabasePersonService.addOrUpdatePerson(DatabasePersonService.java:63)
	... 39 more
</error>
    <system-out>/* creates a new stocks database */ DROP DATABASE IF EXISTS stocks 
CREATE DATABASE stocks 
USE stocks 
DROP TABLE IF EXISTS quotes CASCADE 
DROP TABLE IF EXISTS person_stocks CASCADE 
DROP TABLE IF EXISTS person CASCADE 
DROP TABLE IF EXISTS stock_symbols CASCADE 
CREATE TABLE stock_symbols(    id INT NOT NULL AUTO_INCREMENT,    symbol VARCHAR(4) NOT NULL,    PRIMARY KEY (id) ) 
CREATE TABLE quotes(    id INT NOT NULL AUTO_INCREMENT,    symbol_id INT NOT NULL,    time TIMESTAMP NOT NULL,    price DECIMAL(10,2) NOT NULL,    PRIMARY KEY (id),    FOREIGN KEY (symbol_id) REFERENCES stock_symbols (id) ) 
CREATE TABLE person(    id INT NOT NULL AUTO_INCREMENT,    first_name VARCHAR(256) NOT NULL,    last_name VARCHAR(256) NOT NULL,    PRIMARY KEY (id) ) 
CREATE TABLE person_stocks(    id INT NOT NULL AUTO_INCREMENT,    person_id INT NOT NULL,    symbol_id INT NOT NULL,    PRIMARY KEY (id),    FOREIGN KEY (person_id) REFERENCES person (id),    FOREIGN KEY (symbol_id) REFERENCES stock_symbols (id) ) 
INSERT INTO stock_symbols (symbol) VALUES (&apos;GOOG&apos;) 
SET @stock_symbols_last_value = LAST_INSERT_ID() 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2018-01-01 17:00:01&apos;,&apos;728.58&apos;) 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2018-01-02 17:00:01&apos;,&apos;719.41&apos;) 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2018-01-03 17:00:01&apos;,&apos;718.36&apos;) 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2018-01-04 17:00:01&apos;,&apos;718.27&apos;) 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2018-01-05 17:00:01&apos;,&apos;718.92&apos;) 
INSERT INTO person (first_name,last_name) VALUES (&apos;Kevin&apos;,&apos;Keenan&apos;) 
SET @person_last_value = LAST_INSERT_ID() 
INSERT INTO person_stocks (person_id,symbol_id) VALUES (@person_last_value,@stock_symbols_last_value) 
INSERT INTO stock_symbols (symbol) VALUES (&apos;AAPL&apos;) 
SET @stock_symbols_last_value = LAST_INSERT_ID() 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2018-01-01 17:00:01&apos;,&apos;99.65&apos;) 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2018-01-02 17:00:01&apos;,&apos;98.83&apos;) 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2018-01-03 17:00:01&apos;,&apos;97.34&apos;) 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2018-01-04 17:00:01&apos;,&apos;97.46&apos;) 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2018-01-05 17:00:01&apos;,&apos;97.14&apos;) 
INSERT INTO person_stocks (person_id,symbol_id) VALUES (@person_last_value,@stock_symbols_last_value) 
INSERT INTO person (first_name,last_name) VALUES (&apos;Marks&apos;,&apos;Spencer&apos;) 
SET @person_last_value = LAST_INSERT_ID() 
INSERT INTO person_stocks (person_id,symbol_id) VALUES (@person_last_value,@stock_symbols_last_value) 
INSERT INTO stock_symbols (symbol) VALUES (&apos;AMZN&apos;) 
SET @stock_symbols_last_value = LAST_INSERT_ID() 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2016-06-09 17:00:01&apos;,&apos;727.65&apos;) 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2016-06-10 17:00:01&apos;,&apos;717.91&apos;) 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2016-06-13 17:00:01&apos;,&apos;715.24&apos;) 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2016-06-14 17:00:01&apos;,&apos;719.30&apos;) 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2016-06-15 17:00:01&apos;,&apos;714.26&apos;) 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2016-06-16 17:00:01&apos;,&apos;717.51&apos;) 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2016-06-17 17:00:01&apos;,&apos;706.39&apos;) 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2016-06-20 17:00:01&apos;,&apos;714.01&apos;) 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2016-06-21 17:00:01&apos;,&apos;715.82&apos;) 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2016-06-22 17:00:01&apos;,&apos;710.60&apos;) 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2016-06-23 17:00:01&apos;,&apos;722.08&apos;) 
INSERT INTO person_stocks (person_id,symbol_id) VALUES (@person_last_value,@stock_symbols_last_value) 
l,time,price) VALUES (&apos;AMZN&apos;,&apos;2015-02-03 00:00:01&apos;,&apos;363.21&apos;) 
</system-out>
    <system-err>Sun Oct 28 14:46:25 EDT 2018 WARN: Establishing SSL connection without server&apos;s identity verification is not recommended. According to MySQL 5.5.45+, 5.6.26+ and 5.7.6+ requirements SSL connection must be established by default if explicit option isn&apos;t set. For compliance with existing applications not using SSL the verifyServerCertificate property is set to &apos;false&apos;. You need either to explicitly disable SSL by setting useSSL=false, or set useSSL=true and provide truststore for server certificate verification.
Error executing: l,time,price) VALUES (&apos;AMZN&apos;,&apos;2015-02-03 00:00:01&apos;,&apos;363.21&apos;) 
java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near &apos;l,time,price) VALUES (&apos;AMZN&apos;,&apos;2015-02-03 00:00:01&apos;,&apos;363.21&apos;)&apos; at line 1
Sun Oct 28 14:46:25 EDT 2018 WARN: Establishing SSL connection without server&apos;s identity verification is not recommended. According to MySQL 5.5.45+, 5.6.26+ and 5.7.6+ requirements SSL connection must be established by default if explicit option isn&apos;t set. For compliance with existing applications not using SSL the verifyServerCertificate property is set to &apos;false&apos;. You need either to explicitly disable SSL by setting useSSL=false, or set useSSL=true and provide truststore for server certificate verification.
</system-err>
  </testcase>
  <testcase classname="edu.keenank.advancedjava.services.PersonServiceTest" name="testAddOrUpdatePersonNegative[1]" time="0.304">
    <error message="Index: -1" type="java.lang.IndexOutOfBoundsException">java.lang.IndexOutOfBoundsException: Index: -1
	at java.util.Collections$EmptyList.get(Collections.java:4454)
	at edu.keenank.advancedjava.services.PersonServiceTest.testAddOrUpdatePersonNegative(PersonServiceTest.java:92)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:28)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:300)
	at org.junit.runners.Suite.runChild(Suite.java:128)
	at org.junit.runners.Suite.runChild(Suite.java:24)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:300)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:252)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:141)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:112)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
</error>
    <system-out>/* creates a new stocks database */ DROP DATABASE IF EXISTS stocks 
CREATE DATABASE stocks 
USE stocks 
DROP TABLE IF EXISTS quotes CASCADE 
DROP TABLE IF EXISTS person_stocks CASCADE 
DROP TABLE IF EXISTS person CASCADE 
DROP TABLE IF EXISTS stock_symbols CASCADE 
CREATE TABLE stock_symbols(    id INT NOT NULL AUTO_INCREMENT,    symbol VARCHAR(4) NOT NULL,    PRIMARY KEY (id) ) 
CREATE TABLE quotes(    id INT NOT NULL AUTO_INCREMENT,    symbol_id INT NOT NULL,    time TIMESTAMP NOT NULL,    price DECIMAL(10,2) NOT NULL,    PRIMARY KEY (id),    FOREIGN KEY (symbol_id) REFERENCES stock_symbols (id) ) 
CREATE TABLE person(    id INT NOT NULL AUTO_INCREMENT,    first_name VARCHAR(256) NOT NULL,    last_name VARCHAR(256) NOT NULL,    PRIMARY KEY (id) ) 
CREATE TABLE person_stocks(    id INT NOT NULL AUTO_INCREMENT,    person_id INT NOT NULL,    symbol_id INT NOT NULL,    PRIMARY KEY (id),    FOREIGN KEY (person_id) REFERENCES person (id),    FOREIGN KEY (symbol_id) REFERENCES stock_symbols (id) ) 
INSERT INTO stock_symbols (symbol) VALUES (&apos;GOOG&apos;) 
SET @stock_symbols_last_value = LAST_INSERT_ID() 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2018-01-01 17:00:01&apos;,&apos;728.58&apos;) 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2018-01-02 17:00:01&apos;,&apos;719.41&apos;) 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2018-01-03 17:00:01&apos;,&apos;718.36&apos;) 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2018-01-04 17:00:01&apos;,&apos;718.27&apos;) 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2018-01-05 17:00:01&apos;,&apos;718.92&apos;) 
INSERT INTO person (first_name,last_name) VALUES (&apos;Kevin&apos;,&apos;Keenan&apos;) 
SET @person_last_value = LAST_INSERT_ID() 
INSERT INTO person_stocks (person_id,symbol_id) VALUES (@person_last_value,@stock_symbols_last_value) 
INSERT INTO stock_symbols (symbol) VALUES (&apos;AAPL&apos;) 
SET @stock_symbols_last_value = LAST_INSERT_ID() 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2018-01-01 17:00:01&apos;,&apos;99.65&apos;) 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2018-01-02 17:00:01&apos;,&apos;98.83&apos;) 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2018-01-03 17:00:01&apos;,&apos;97.34&apos;) 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2018-01-04 17:00:01&apos;,&apos;97.46&apos;) 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2018-01-05 17:00:01&apos;,&apos;97.14&apos;) 
INSERT INTO person_stocks (person_id,symbol_id) VALUES (@person_last_value,@stock_symbols_last_value) 
INSERT INTO person (first_name,last_name) VALUES (&apos;Marks&apos;,&apos;Spencer&apos;) 
SET @person_last_value = LAST_INSERT_ID() 
INSERT INTO person_stocks (person_id,symbol_id) VALUES (@person_last_value,@stock_symbols_last_value) 
INSERT INTO stock_symbols (symbol) VALUES (&apos;AMZN&apos;) 
SET @stock_symbols_last_value = LAST_INSERT_ID() 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2016-06-09 17:00:01&apos;,&apos;727.65&apos;) 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2016-06-10 17:00:01&apos;,&apos;717.91&apos;) 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2016-06-13 17:00:01&apos;,&apos;715.24&apos;) 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2016-06-14 17:00:01&apos;,&apos;719.30&apos;) 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2016-06-15 17:00:01&apos;,&apos;714.26&apos;) 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2016-06-16 17:00:01&apos;,&apos;717.51&apos;) 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2016-06-17 17:00:01&apos;,&apos;706.39&apos;) 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2016-06-20 17:00:01&apos;,&apos;714.01&apos;) 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2016-06-21 17:00:01&apos;,&apos;715.82&apos;) 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2016-06-22 17:00:01&apos;,&apos;710.60&apos;) 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2016-06-23 17:00:01&apos;,&apos;722.08&apos;) 
INSERT INTO person_stocks (person_id,symbol_id) VALUES (@person_last_value,@stock_symbols_last_value) 
l,time,price) VALUES (&apos;AMZN&apos;,&apos;2015-02-03 00:00:01&apos;,&apos;363.21&apos;) 
</system-out>
    <system-err>Sun Oct 28 14:46:25 EDT 2018 WARN: Establishing SSL connection without server&apos;s identity verification is not recommended. According to MySQL 5.5.45+, 5.6.26+ and 5.7.6+ requirements SSL connection must be established by default if explicit option isn&apos;t set. For compliance with existing applications not using SSL the verifyServerCertificate property is set to &apos;false&apos;. You need either to explicitly disable SSL by setting useSSL=false, or set useSSL=true and provide truststore for server certificate verification.
Error executing: l,time,price) VALUES (&apos;AMZN&apos;,&apos;2015-02-03 00:00:01&apos;,&apos;363.21&apos;) 
java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near &apos;l,time,price) VALUES (&apos;AMZN&apos;,&apos;2015-02-03 00:00:01&apos;,&apos;363.21&apos;)&apos; at line 1
Sun Oct 28 14:46:25 EDT 2018 WARN: Establishing SSL connection without server&apos;s identity verification is not recommended. According to MySQL 5.5.45+, 5.6.26+ and 5.7.6+ requirements SSL connection must be established by default if explicit option isn&apos;t set. For compliance with existing applications not using SSL the verifyServerCertificate property is set to &apos;false&apos;. You need either to explicitly disable SSL by setting useSSL=false, or set useSSL=true and provide truststore for server certificate verification.
</system-err>
  </testcase>
  <testcase classname="edu.keenank.advancedjava.services.PersonServiceTest" name="testGetStockSymbolsPositive[1]" time="0.27">
    <error message="Could not add/update Person data. Unknown entity: edu.keenank.advancedjava.model.DatabasePerson" type="edu.keenank.advancedjava.services.PersonServiceException">edu.keenank.advancedjava.services.PersonServiceException: Could not add/update Person data. Unknown entity: edu.keenank.advancedjava.model.DatabasePerson
	at edu.keenank.advancedjava.services.DatabasePersonService.addOrUpdatePerson(DatabasePersonService.java:69)
	at edu.keenank.advancedjava.services.PersonServiceTest.testGetStockSymbolsPositive(PersonServiceTest.java:101)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:28)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:300)
	at org.junit.runners.Suite.runChild(Suite.java:128)
	at org.junit.runners.Suite.runChild(Suite.java:24)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:300)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:252)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:141)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:112)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
Caused by: org.hibernate.MappingException: Unknown entity: edu.keenank.advancedjava.model.DatabasePerson
	at org.hibernate.internal.SessionFactoryImpl.getEntityPersister(SessionFactoryImpl.java:1143)
	at org.hibernate.internal.SessionImpl.getEntityPersister(SessionImpl.java:1433)
	at org.hibernate.engine.internal.ForeignKeys.isTransient(ForeignKeys.java:208)
	at org.hibernate.event.internal.AbstractSaveEventListener.getEntityState(AbstractSaveEventListener.java:497)
	at org.hibernate.event.internal.DefaultSaveOrUpdateEventListener.performSaveOrUpdate(DefaultSaveOrUpdateEventListener.java:100)
	at org.hibernate.event.internal.DefaultSaveOrUpdateEventListener.onSaveOrUpdate(DefaultSaveOrUpdateEventListener.java:90)
	at org.hibernate.internal.SessionImpl.fireSaveOrUpdate(SessionImpl.java:735)
	at org.hibernate.internal.SessionImpl.saveOrUpdate(SessionImpl.java:727)
	at org.hibernate.internal.SessionImpl.saveOrUpdate(SessionImpl.java:723)
	at edu.keenank.advancedjava.services.DatabasePersonService.addOrUpdatePerson(DatabasePersonService.java:63)
	... 39 more
</error>
    <system-out>/* creates a new stocks database */ DROP DATABASE IF EXISTS stocks 
CREATE DATABASE stocks 
USE stocks 
DROP TABLE IF EXISTS quotes CASCADE 
DROP TABLE IF EXISTS person_stocks CASCADE 
DROP TABLE IF EXISTS person CASCADE 
DROP TABLE IF EXISTS stock_symbols CASCADE 
CREATE TABLE stock_symbols(    id INT NOT NULL AUTO_INCREMENT,    symbol VARCHAR(4) NOT NULL,    PRIMARY KEY (id) ) 
CREATE TABLE quotes(    id INT NOT NULL AUTO_INCREMENT,    symbol_id INT NOT NULL,    time TIMESTAMP NOT NULL,    price DECIMAL(10,2) NOT NULL,    PRIMARY KEY (id),    FOREIGN KEY (symbol_id) REFERENCES stock_symbols (id) ) 
CREATE TABLE person(    id INT NOT NULL AUTO_INCREMENT,    first_name VARCHAR(256) NOT NULL,    last_name VARCHAR(256) NOT NULL,    PRIMARY KEY (id) ) 
CREATE TABLE person_stocks(    id INT NOT NULL AUTO_INCREMENT,    person_id INT NOT NULL,    symbol_id INT NOT NULL,    PRIMARY KEY (id),    FOREIGN KEY (person_id) REFERENCES person (id),    FOREIGN KEY (symbol_id) REFERENCES stock_symbols (id) ) 
INSERT INTO stock_symbols (symbol) VALUES (&apos;GOOG&apos;) 
SET @stock_symbols_last_value = LAST_INSERT_ID() 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2018-01-01 17:00:01&apos;,&apos;728.58&apos;) 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2018-01-02 17:00:01&apos;,&apos;719.41&apos;) 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2018-01-03 17:00:01&apos;,&apos;718.36&apos;) 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2018-01-04 17:00:01&apos;,&apos;718.27&apos;) 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2018-01-05 17:00:01&apos;,&apos;718.92&apos;) 
INSERT INTO person (first_name,last_name) VALUES (&apos;Kevin&apos;,&apos;Keenan&apos;) 
SET @person_last_value = LAST_INSERT_ID() 
INSERT INTO person_stocks (person_id,symbol_id) VALUES (@person_last_value,@stock_symbols_last_value) 
INSERT INTO stock_symbols (symbol) VALUES (&apos;AAPL&apos;) 
SET @stock_symbols_last_value = LAST_INSERT_ID() 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2018-01-01 17:00:01&apos;,&apos;99.65&apos;) 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2018-01-02 17:00:01&apos;,&apos;98.83&apos;) 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2018-01-03 17:00:01&apos;,&apos;97.34&apos;) 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2018-01-04 17:00:01&apos;,&apos;97.46&apos;) 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2018-01-05 17:00:01&apos;,&apos;97.14&apos;) 
INSERT INTO person_stocks (person_id,symbol_id) VALUES (@person_last_value,@stock_symbols_last_value) 
INSERT INTO person (first_name,last_name) VALUES (&apos;Marks&apos;,&apos;Spencer&apos;) 
SET @person_last_value = LAST_INSERT_ID() 
INSERT INTO person_stocks (person_id,symbol_id) VALUES (@person_last_value,@stock_symbols_last_value) 
INSERT INTO stock_symbols (symbol) VALUES (&apos;AMZN&apos;) 
SET @stock_symbols_last_value = LAST_INSERT_ID() 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2016-06-09 17:00:01&apos;,&apos;727.65&apos;) 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2016-06-10 17:00:01&apos;,&apos;717.91&apos;) 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2016-06-13 17:00:01&apos;,&apos;715.24&apos;) 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2016-06-14 17:00:01&apos;,&apos;719.30&apos;) 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2016-06-15 17:00:01&apos;,&apos;714.26&apos;) 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2016-06-16 17:00:01&apos;,&apos;717.51&apos;) 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2016-06-17 17:00:01&apos;,&apos;706.39&apos;) 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2016-06-20 17:00:01&apos;,&apos;714.01&apos;) 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2016-06-21 17:00:01&apos;,&apos;715.82&apos;) 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2016-06-22 17:00:01&apos;,&apos;710.60&apos;) 
INSERT INTO quotes (symbol_id,time,price) VALUES (@stock_symbols_last_value,&apos;2016-06-23 17:00:01&apos;,&apos;722.08&apos;) 
INSERT INTO person_stocks (person_id,symbol_id) VALUES (@person_last_value,@stock_symbols_last_value) 
l,time,price) VALUES (&apos;AMZN&apos;,&apos;2015-02-03 00:00:01&apos;,&apos;363.21&apos;) 
</system-out>
    <system-err>Sun Oct 28 14:46:25 EDT 2018 WARN: Establishing SSL connection without server&apos;s identity verification is not recommended. According to MySQL 5.5.45+, 5.6.26+ and 5.7.6+ requirements SSL connection must be established by default if explicit option isn&apos;t set. For compliance with existing applications not using SSL the verifyServerCertificate property is set to &apos;false&apos;. You need either to explicitly disable SSL by setting useSSL=false, or set useSSL=true and provide truststore for server certificate verification.
Error executing: l,time,price) VALUES (&apos;AMZN&apos;,&apos;2015-02-03 00:00:01&apos;,&apos;363.21&apos;) 
java.sql.SQLSyntaxErrorException: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near &apos;l,time,price) VALUES (&apos;AMZN&apos;,&apos;2015-02-03 00:00:01&apos;,&apos;363.21&apos;)&apos; at line 1
Sun Oct 28 14:46:26 EDT 2018 WARN: Establishing SSL connection without server&apos;s identity verification is not recommended. According to MySQL 5.5.45+, 5.6.26+ and 5.7.6+ requirements SSL connection must be established by default if explicit option isn&apos;t set. For compliance with existing applications not using SSL the verifyServerCertificate property is set to &apos;false&apos;. You need either to explicitly disable SSL by setting useSSL=false, or set useSSL=true and provide truststore for server certificate verification.
</system-err>
  </testcase>
</testsuite>